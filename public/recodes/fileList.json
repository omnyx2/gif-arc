[
  {
    "filename": "002cf995-6401-47f2-9ef0-1bb07aea4604.json",
    "uuid": "002cf995-6401-47f2-9ef0-1bb07aea4604",
    "created": "2025-04-26 15:18:20",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [0,7,7,7,7,7,7,0],\n                [7,0,9,5,5,5,4,7],\n                [7,9,0,5,4,5,9,7],\n                [7,5,5,0,9,5,5,1],\n                [1,5,4,9,0,5,5,7],\n                [7,4,5,9,5,4,9,7],\n                [1,0,9,5,5,9,0,1],\n                [0,1,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,8,8,8,8,8,8,0],\n                [8,0,9,2,2,2,4,8],\n                [8,9,0,2,4,2,9,8],\n                [8,2,2,0,9,2,2,8],\n                [8,2,4,9,0,2,2,8],\n                [8,4,2,9,2,4,9,8],\n                [8,0,9,2,2,9,0,8],\n                [0,8,8,8,8,8,8,0]\n            ],\n            \"solution\": \"고리(7,1)는 8로, 5는 2로 변환하고 9,4,0은 그대로 유지합니다.\"\n        },\n        {\n            \"input\": [\n                [0,7,7,7,7,7,7,7,7,0],\n                [7,0,5,5,4,5,9,5,0,7],\n                [7,5,0,5,9,5,4,0,5,7],\n                [7,4,5,0,9,0,5,5,9,7],\n                [7,5,9,9,0,4,9,0,5,7],\n                [1,5,4,0,9,0,4,9,5,1],\n                [1,9,5,5,4,5,0,5,9,1],\n                [1,0,4,9,5,9,5,4,0,1],\n                [1,5,5,5,5,5,5,5,5,1],\n                [0,1,1,1,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,8,8,8,8,8,8,8,8,0],\n                [8,0,2,2,4,2,9,2,0,8],\n                [8,2,0,2,9,2,4,0,2,8],\n                [8,4,2,0,9,0,2,2,9,8],\n                [8,2,9,9,0,4,9,0,2,8],\n                [8,2,4,0,9,0,4,9,2,8],\n                [8,9,2,2,4,2,0,2,9,8],\n                [8,0,4,9,2,9,2,4,0,8],\n                [8,2,2,2,2,2,2,2,2,8],\n                [0,8,8,8,8,8,8,8,8,0]\n            ],\n            \"solution\": \"7,1은 8로, 5는 2로 통일하며 그 외 4,9,0 등은 변동 없이 유지합니다.\"\n        },\n        {\n            \"input\": [\n                [0,7,7,7,7,7,7,7,0],\n                [7,0,5,9,4,9,5,0,1],\n                [7,5,0,5,5,5,0,4,1],\n                [7,9,5,0,4,0,5,5,1],\n                [7,4,5,4,5,4,5,9,1],\n                [1,5,0,5,5,5,0,5,1],\n                [1,0,5,9,4,9,5,0,1],\n                [1,0,0,4,9,4,0,0,1],\n                [0,1,1,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,8,8,8,8,8,8,8,0],\n                [8,0,2,9,4,9,2,0,8],\n                [8,2,0,2,2,2,0,4,8],\n                [8,9,2,0,4,0,2,2,8],\n                [8,4,2,4,2,4,2,9,8],\n                [8,2,0,2,2,2,0,2,8],\n                [8,0,2,9,4,9,2,0,8],\n                [8,0,0,4,9,4,0,0,8],\n                [0,8,8,8,8,8,8,8,0]\n            ],\n            \"solution\": \"7이나 1은 8, 5는 2로 치환하고 9,4,0은 변화 없습니다.\"\n        },\n        {\n            \"input\": [\n                [0,7,7,7,7,7,7,7],\n                [7,0,5,5,9,5,0,7],\n                [7,5,0,5,4,9,5,7],\n                [7,9,5,4,5,5,9,7],\n                [7,4,9,5,0,5,4,1],\n                [1,5,5,0,4,9,5,1],\n                [1,9,0,5,5,5,9,1],\n                [1,4,5,9,4,0,5,1],\n                [1,5,9,5,9,5,0,1],\n                [1,0,5,4,5,0,9,1],\n                [1,0,0,0,0,0,0,1],\n                [0,1,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,8,8,8,8,8,8,8],\n                [8,0,2,2,9,2,0,8],\n                [8,2,0,2,4,9,2,8],\n                [8,9,2,4,2,2,9,8],\n                [8,4,9,2,0,2,4,8],\n                [8,2,2,0,4,9,2,8],\n                [8,9,0,2,2,2,9,8],\n                [8,4,2,9,4,0,2,8],\n                [8,2,9,2,9,2,0,8],\n                [8,0,2,4,2,0,9,8],\n                [8,0,0,0,0,0,0,8],\n                [0,8,8,8,8,8,8,0]\n            ],\n            \"solution\": \"모든 7,1을 8로 치환하고 5는 2로 변경, 4와 9, 0은 영향받지 않습니다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "06ef8f76-663e-4801-b122-8e5636cbd46d.json",
    "uuid": "06ef8f76-663e-4801-b122-8e5636cbd46d",
    "created": "2025-04-26 14:05:11",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,0,0,0,1],\n                [1,0,7,2,7,0,0,0,1],\n                [1,0,7,0,7,0,0,0,1],\n                [1,0,7,2,7,0,0,0,1],\n                [1,0,7,7,7,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,0,0,0,1],\n                [1,0,0,2,7,7,0,0,1],\n                [1,0,0,7,7,0,0,0,1],\n                [1,0,0,2,7,7,0,0,1],\n                [1,0,7,7,7,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"원형(7)만 시계 방향으로 살짝 회전하고, 가운데 표식(2)은 고정된 상태로 유지되는 규칙\"\n        },\n        {\n            \"input\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,6,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,6,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,0,7,1],\n                [1,0,7,0,0,0,0,7,1],\n                [1,0,7,7,7,7,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"큰 원형(7)이 살짝 회전하는 동안 왼쪽 상단의 6은 고정된 상태로 남는 규칙\"\n        },\n        {\n            \"input\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,8,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,7,8,7,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"원형(7)과 내부 객체(8)가 하나의 그룹으로 시계 방향 회전 적용을 받는 규칙\"\n        },\n        {\n            \"input\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,9,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,0,7,1],\n                [1,0,7,0,0,0,0,7,1],\n                [1,0,7,7,7,7,0,0,1],\n                [1,0,0,0,0,0,0,9,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"원형(7)만 회전하고, 하단 구석의 9는 위치가 바뀌지 않는 규칙\"\n        },\n        {\n            \"input\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,2,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,8,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\":[\n                [1,1,1,1,1,1,1,1,1],\n                [1,2,0,0,0,0,0,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,7,0,0,7,8,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,0,0,0,7,0,1],\n                [1,0,7,7,7,7,7,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"7과 8은 하나의 회전 그룹으로 이동하되, 2는 해당되지 않아 원래대로 남는 구조의 규칙\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "0cf5de79-acb0-44f8-b60c-f8ed12e305aa.json",
    "uuid": "0cf5de79-acb0-44f8-b60c-f8ed12e305aa",
    "created": "2025-04-26 15:50:48",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,4,0,0,0,3,0,0,0],\n        [0,0,4,0,1,0,3,0,0,0],\n        [0,0,4,0,1,0,3,0,0,0],\n        [0,4,4,4,1,4,3,0,0,0],\n        [0,0,0,0,0,0,0,0,8,8],\n        [0,5,5,0,0,0,0,0,8,8],\n        [0,5,1,0,9,0,2,2,8,8],\n        [0,5,0,0,0,0,2,2,2,2],\n        [7,5,0,6,6,6,2,0,0,2],\n        [7,7,0,0,0,0,2,2,2,2]\n      ],\n      \"output\": [\n        [0,0,4,0,0,0,3,0,0,0],\n        [0,0,4,0,1,0,3,0,0,0],\n        [0,0,4,0,1,0,3,0,0,0],\n        [0,4,4,4,1,4,3,0,0,0],\n        [0,0,0,0,0,0,0,0,8,8],\n        [0,5,5,0,0,0,0,0,8,8],\n        [0,5,1,0,9,0,2,2,8,8],\n        [7,5,0,0,0,0,2,2,2,2],\n        [0,0,0,6,6,6,2,0,0,2],\n        [0,0,0,0,0,0,2,2,2,2]\n      ],\n      \"solution\": \"불꽃(7)은 위로 이동하며, 1(벽)이 있으면 바로 아래 행에 정착, 벽이 없으면 소멸한다. 나머지 수(2·3·4·5·6·8·9)는 이동에 영향이 없으므로 그대로 유지된다.\"\n    },\n    {\n      \"input\": [\n        [9,0,0,8,8,8,0,0,0,0],\n        [9,0,0,8,1,8,0,6,6,0],\n        [9,0,0,8,0,8,0,6,6,0],\n        [9,0,0,8,0,8,0,6,6,0],\n        [9,0,1,1,1,1,1,1,6,0],\n        [9,0,2,2,2,2,2,2,6,0],\n        [9,0,2,7,7,7,2,2,6,0],\n        [9,0,2,7,0,7,2,2,6,0],\n        [9,0,0,7,0,7,0,0,0,0],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"output\": [\n        [9,0,0,8,8,8,0,0,0,0],\n        [9,0,0,8,1,8,0,6,6,0],\n        [9,0,0,8,0,8,0,6,6,0],\n        [9,0,0,8,0,8,0,6,6,0],\n        [9,0,1,1,1,1,1,1,6,0],\n        [9,0,2,2,2,2,2,2,6,0],\n        [9,0,2,7,7,7,2,2,6,0],\n        [9,0,2,0,0,0,2,2,6,0],\n        [9,0,0,0,0,0,0,0,0,0],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"solution\": \"불꽃(7)은 상단으로 이동하며 통로에 1이 있으면 막힌다. 9(▓), 8(O), 6(?), 2(=) 등은 장식이므로 통과 가능. 벽이 없으면 최상단에서 사라진다.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,7,7,7,0,0,0,0],\n        [0,0,2,2,2,2,2,0,0,0],\n        [0,0,2,1,1,1,2,0,0,3],\n        [0,4,2,1,0,1,2,0,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [8,8,9,1,0,1,9,9,8,8],\n        [8,8,9,1,0,1,9,9,8,8]\n      ],\n      \"output\": [\n        [0,0,0,7,7,7,0,0,0,0],\n        [0,0,2,2,2,2,2,0,0,0],\n        [0,0,2,1,1,1,2,0,0,3],\n        [0,4,2,1,0,1,2,0,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [0,4,9,1,0,1,9,9,0,3],\n        [8,8,9,1,0,1,9,9,8,8],\n        [8,8,0,0,0,0,0,9,8,8]\n      ],\n      \"solution\": \"아래 불꽃들이 위로 이동. 1(벽)에 막히거나 벽이 없는 열은 최상단까지 이동해 사라진다. 8,9 등 다른 수치는 통과 가능. 일부 불꽃만 특정 위치에 남는다.\"\n    },\n    {\n      \"input\": [\n        [8,0,5,0,5,0,5,0,5,8],\n        [0,0,5,0,5,0,5,0,5,0],\n        [0,0,5,0,1,0,5,0,5,0],\n        [0,0,5,0,5,0,5,0,5,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [1,1,1,1,0,0,4,4,4,0],\n        [7,7,1,7,0,0,4,1,4,0],\n        [7,0,0,7,0,0,4,0,4,0],\n        [7,0,0,7,0,0,4,0,4,0],\n        [7,0,0,7,0,0,4,0,4,0]\n      ],\n      \"output\": [\n        [8,0,5,0,5,0,5,0,5,8],\n        [0,0,5,0,5,0,5,0,5,0],\n        [0,0,5,0,1,0,5,0,5,0],\n        [0,0,5,0,5,0,5,0,5,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [1,1,1,1,0,0,4,4,4,0],\n        [0,0,1,0,0,0,4,1,4,0],\n        [0,0,0,0,0,0,4,0,4,0],\n        [0,0,0,0,0,0,4,0,4,0],\n        [0,0,0,0,0,0,4,0,4,0]\n      ],\n      \"solution\": \"아래쪽 불꽃(7)은 위로 이동 중 1(벽)이 있으면 그 직전 위치에서 멈춘다. 벽이 없는 열은 격자 가장 위까지 소멸. 5,4,8 등은 장식이므로 이동에 영향이 없다.\"\n    },\n    {\n      \"input\": [\n        [2,2,2,2,9,9,2,2,2,2],\n        [2,0,0,0,9,9,0,0,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,7,0,0,7,1,0,2],\n        [2,0,1,7,0,0,7,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,0,0,9,9,0,0,0,2],\n        [2,2,2,2,9,9,2,2,2,2]\n      ],\n      \"output\": [\n        [2,2,2,2,9,9,2,2,2,2],\n        [2,0,0,0,9,9,0,0,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,7,0,0,7,1,0,2],\n        [2,0,1,0,0,0,0,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,1,0,9,9,0,1,0,2],\n        [2,0,0,0,9,9,0,0,0,2],\n        [2,2,2,2,9,9,2,2,2,2]\n      ],\n      \"solution\": \"2·9 등은 불꽃을 막지 않는 장식이므로 무시. 1(벽)만 불꽃 이동에 영향. 불꽃(7)은 벽이 없으면 계속 위로 이동해 소멸, 벽이 있으면 직전 행에 멈춘다.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "0d89fba3-22da-4c80-818d-7f6e2c5e8ada.json",
    "uuid": "0d89fba3-22da-4c80-818d-7f6e2c5e8ada",
    "created": "2025-04-26 12:02:56",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "10835ccf-598c-43b2-9829-fecc2115ce6f.json",
    "uuid": "10835ccf-598c-43b2-9829-fecc2115ce6f",
    "created": "2025-04-26 12:50:29",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [9,9,0,0,0,9,9,0],\n                [0,3,0,2,0,0,9,0],\n                [0,0,7,0,3,0,0,0],\n                [0,0,7,2,0,9,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,0,1,1,1,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [9,9,0,0,0,9,9,0],\n                [0,3,0,2,0,0,9,0],\n                [0,0,0,0,3,0,0,0],\n                [0,0,1,2,0,9,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,0,1,1,0,0,0],\n                [0,0,0,0,1,1,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"파도(1)가 위로 이동. 건물(7)을 만나면 0으로 만들고 이동 성공, 구름(2)은 8로 변환, 바위(3)·수평선(9)은 통과 불가.\"\n        },\n        {\n            \"input\": [\n                [9,9,9,0,0,0,0,0],\n                [4,2,0,0,0,7,9,0],\n                [4,0,0,2,0,0,0,0],\n                [4,0,7,0,0,9,0,0],\n                [0,0,1,0,1,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [9,9,9,0,0,0,0,0],\n                [4,2,0,0,0,7,9,0],\n                [4,0,0,2,0,0,0,0],\n                [4,0,0,0,0,9,0,0],\n                [0,0,1,0,1,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,0,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"파도(1)가 한 칸 위로 이동. 건물(7) 만나면 침하시켜 0이 되고 파도가 그 칸을 차지. 나무(4)·수평선(9)은 이동 방해.\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,0,0,0,0],\n                [0,5,0,2,0,0,0,0],\n                [0,5,0,7,7,2,0,9],\n                [0,0,0,0,7,0,0,9],\n                [0,0,1,1,0,0,0,0],\n                [0,0,1,1,1,2,0,0],\n                [0,0,0,1,1,1,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [9,9,9,9,0,0,0,0],\n                [0,5,0,2,0,0,0,0],\n                [0,5,0,0,7,2,0,9],\n                [0,0,1,1,0,0,0,9],\n                [0,0,1,1,1,2,0,0],\n                [0,0,0,1,1,0,0,0],\n                [0,0,0,0,1,1,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"파도(1)가 위로 이동하여 일부 건물(7)을 0으로 바꾸고 차지. 조각상(5)은 이동 불가 장애물, 구름(2) 만나면 8로 변환 가능.\"\n        },\n        {\n            \"input\": [\n                [0,9,9,9,9,0,0,0],\n                [0,6,0,2,9,0,7,0],\n                [0,6,1,0,0,0,2,0],\n                [0,0,1,7,0,0,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,0,1,1,1,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,9,9,9,9,0,0,0],\n                [0,6,0,2,9,0,7,0],\n                [0,6,1,0,0,0,2,0],\n                [0,0,0,7,0,0,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,0,1,1,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"파도(1)가 건물(7)에 닿으면 0으로 만들어 해당 칸으로 이동. 문(6)은 막힌 문으로 간주하여 파도를 막음. 구름(2)에 닿으면 8.\"\n        },\n        {\n            \"input\": [\n                [0,9,9,0,3,9,0,0],\n                [0,9,0,4,0,0,0,0],\n                [0,2,7,4,3,0,0,0],\n                [0,0,7,0,0,9,0,0],\n                [0,1,1,0,2,0,0,0],\n                [0,1,1,1,0,0,0,0],\n                [0,0,1,1,1,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,9,9,0,3,9,0,0],\n                [0,9,0,4,0,0,0,0],\n                [0,2,0,4,3,0,0,0],\n                [0,0,1,0,0,9,0,0],\n                [0,1,1,0,2,0,0,0],\n                [0,0,1,1,0,0,0,0],\n                [0,0,0,1,1,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"파도(1)가 위로 이동. 건물(7)과 만나면 0으로 바뀌고 파도가 차지. 바위(3), 나무(4), 구름(2), 수평선(9) 등은 각각 파도 이동을 막거나 8 변환을 일으킴.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "1457af71-d645-40e6-913b-876ddbc5bf2a.json",
    "uuid": "1457af71-d645-40e6-913b-876ddbc5bf2a",
    "created": "2025-04-26 13:34:39",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [7,7,7,7,7,7,7,7,7],\n        [7,0,0,0,8,0,0,0,7],\n        [7,0,4,0,8,0,4,0,7],\n        [7,0,0,8,8,8,0,0,7],\n        [7,8,8,8,9,8,8,8,7],\n        [7,0,0,8,8,8,0,0,7],\n        [7,0,4,0,8,0,4,0,7],\n        [7,0,0,0,8,0,0,0,7],\n        [7,7,7,7,7,7,7,7,7]\n      ],\n      \"output\": [\n        [7,7,7,7,7,7,7,7,7],\n        [7,0,0,0,0,0,0,0,7],\n        [7,0,4,0,0,0,0,0,7],\n        [7,0,0,0,8,8,8,0,7],\n        [7,0,8,8,9,8,8,8,7],\n        [7,0,0,8,8,8,0,0,7],\n        [7,0,0,0,0,0,4,0,7],\n        [7,0,0,0,0,0,0,0,7],\n        [7,7,7,7,7,7,7,7,7]\n      ],\n      \"solution\": \"Puzzle 1 - 중심(9)은 고정, 나머지는 바깥 링 기준 시계방향 회전\"\n    },\n    {\n      \"input\": [\n        [6,6,6,6,6,6,6,6,6],\n        [6,0,0,0,0,0,0,0,6],\n        [6,0,5,0,0,0,5,0,6],\n        [6,0,0,5,0,5,0,0,6],\n        [6,0,0,0,9,0,0,0,6],\n        [6,0,0,5,0,5,0,0,6],\n        [6,0,5,0,0,0,5,0,6],\n        [6,0,0,0,0,0,0,0,6],\n        [6,6,6,6,6,6,6,6,6]\n      ],\n      \"output\": [\n        [6,6,6,6,6,6,6,6,6],\n        [6,0,0,0,0,0,0,0,6],\n        [6,0,5,0,0,0,0,0,6],\n        [6,0,0,5,0,0,0,0,6],\n        [6,0,0,0,9,0,5,0,6],\n        [6,0,0,0,0,5,0,0,6],\n        [6,0,0,0,0,0,0,0,6],\n        [6,0,0,0,0,0,0,5,6],\n        [6,6,6,6,6,6,6,6,6]\n      ],\n      \"solution\": \"Puzzle 2 - 중심(9)은 고정, 둘러싼 링(6,5 등)을 시계 방향으로 한 칸씩 이동\"\n    },\n    {\n      \"input\": [\n        [8,8,8,8,8,8,8,8,8],\n        [8,4,4,4,4,4,4,4,8],\n        [8,4,0,0,0,0,0,4,8],\n        [8,4,0,6,6,6,0,4,8],\n        [8,4,0,6,9,6,0,4,8],\n        [8,4,0,6,6,6,0,4,8],\n        [8,4,0,0,0,0,0,4,8],\n        [8,4,4,4,4,4,4,4,8],\n        [8,8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [8,8,8,8,8,8,8,8,8],\n        [8,4,4,4,4,4,4,4,8],\n        [8,4,0,0,0,0,0,4,8],\n        [8,4,0,6,6,6,0,4,8],\n        [8,4,0,6,9,6,0,4,8],\n        [8,4,4,6,6,6,0,0,8],\n        [8,4,0,0,0,0,4,0,8],\n        [8,4,4,4,4,4,4,4,8],\n        [8,8,8,8,8,8,8,8,8]\n      ],\n      \"solution\": \"Puzzle 3 - 링 구조를 따라 시계로 한 칸씩 이동, 중앙(9)은 불변\"\n    },\n    {\n      \"input\": [\n        [3,3,3,3,3,3,3,3,3],\n        [3,2,2,2,2,2,2,2,3],\n        [3,2,0,0,5,0,0,2,3],\n        [3,2,0,5,5,5,0,2,3],\n        [3,2,5,5,9,5,5,2,3],\n        [3,2,0,5,5,5,0,2,3],\n        [3,2,0,0,5,0,0,2,3],\n        [3,2,2,2,2,2,2,2,3],\n        [3,3,3,3,3,3,3,3,3]\n      ],\n      \"output\": [\n        [3,3,3,3,3,3,3,3,3],\n        [3,2,2,2,2,2,2,2,3],\n        [3,2,0,0,0,5,0,2,3],\n        [3,2,0,5,5,5,0,2,3],\n        [3,2,5,5,9,5,5,2,3],\n        [3,2,0,5,5,5,0,0,3],\n        [3,2,0,0,5,0,2,2,3],\n        [3,2,2,2,2,2,2,2,3],\n        [3,3,3,3,3,3,3,3,3]\n      ],\n      \"solution\": \"Puzzle 4 - 외곽(3,2,5 등)은 시계 회전, 9는 중앙에서 유지\"\n    },\n    {\n      \"input\": [\n        [7,7,7,7,7,7,7,7,7],\n        [7,1,1,1,1,1,1,1,7],\n        [7,1,0,0,0,0,0,1,7],\n        [7,1,0,1,1,1,0,1,7],\n        [7,1,0,1,9,1,0,1,7],\n        [7,1,0,1,1,1,0,1,7],\n        [7,1,0,0,0,0,0,1,7],\n        [7,1,1,1,1,1,1,1,7],\n        [7,7,7,7,7,7,7,7,7]\n      ],\n      \"output\": [\n        [7,7,7,7,7,7,7,7,7],\n        [7,1,1,1,1,1,1,1,7],\n        [7,1,0,0,0,0,0,1,7],\n        [7,1,0,1,1,1,0,0,7],\n        [7,1,0,1,9,1,0,1,7],\n        [7,1,0,1,1,1,0,0,7],\n        [7,1,1,0,0,0,0,1,7],\n        [7,0,1,1,1,1,1,1,7],\n        [7,7,7,7,7,7,7,7,7]\n      ],\n      \"solution\": \"Puzzle 5 - 시계방향 링 이동 한 칸 적용, 중앙(9) 고정\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "22066b72-f2e5-4e06-9244-e1144a7865aa.json",
    "uuid": "22066b72-f2e5-4e06-9244-e1144a7865aa",
    "created": "2025-04-26 15:34:31",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "246c8b95-b008-44d6-b0f0-fb89e3dc0f57.json",
    "uuid": "246c8b95-b008-44d6-b0f0-fb89e3dc0f57",
    "created": "2025-04-26 13:41:57",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "199e4c79-29f6-4d1b-a261-a4474dfe445f.json",
    "uuid": "199e4c79-29f6-4d1b-a261-a4474dfe445f",
    "created": "2025-04-26 15:03:48",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                \".9999999999\",\n                \"9.........9\",\n                \"9.12.....39\",\n                \"9..2.....19\",\n                \"9...5....39\",\n                \"9....5...19\",\n                \"9...5....39\",\n                \"9..2.....19\",\n                \"9.12.....39\",\n                \"9.........9\",\n                \"9999999999.\"\n            ],\n            \"output\":[\n                \"99999999999\",\n                \"9.........9\",\n                \"9.12..5..39\",\n                \"9..2...2..9\",\n                \"9...5.5...9\",\n                \"9...5.5...9\",\n                \"9...5.5...9\",\n                \"9..2...2..9\",\n                \"9.12..5..39\",\n                \"9.........9\",\n                \"99999999999\"\n            ],\n            \"solution\":\"사분면 대칭 규칙을 적용하여 테두리(9)와 내부 숫자(1,2,3,5)가 4방향으로 복제되어 별 형태와 완전한 원형 테두리를 형성한다.\"\n        },\n        {\n            \"input\":[\n                \".8888888888\",\n                \"8.........8\",\n                \"8.2.......8\",\n                \"8..3.....8.\",\n                \"8...4....8.\",\n                \"8....5...8.\",\n                \"8.........8\",\n                \"8.........8\",\n                \"8.........8\",\n                \"8.........8\",\n                \"8888888888.\"\n            ],\n            \"output\":[\n                \"88888888888\",\n                \"8.........8\",\n                \"8.2.....2.8\",\n                \"8..3...3..8\",\n                \"8...4.4...8\",\n                \"8....5....8\",\n                \"8...4.4...8\",\n                \"8..3...3..8\",\n                \"8.2.....2.8\",\n                \"8.........8\",\n                \"88888888888\"\n            ],\n            \"solution\":\"가운데 영역을 중심으로 사분면 반영, ‘8’ 테두리를 마감하고 내부 객체(2,3,4,5)를 대칭 복제하여 완성한다.\"\n        },\n        {\n            \"input\":[\n                \".7777777777\",\n                \"7.........7\",\n                \"7.1.......7\",\n                \"7..4.....7.\",\n                \"7...9....7.\",\n                \"7....3...7.\",\n                \"7.........7\",\n                \"7.........7\",\n                \"7.........7\",\n                \"7.........7\",\n                \"7777777777.\"\n            ],\n            \"output\":[\n                \"77777777777\",\n                \"7.........7\",\n                \"7.1.....1.7\",\n                \"7..4...4..7\",\n                \"7...9.9...7\",\n                \"7....3....7\",\n                \"7...9.9...7\",\n                \"7..4...4..7\",\n                \"7.1.....1.7\",\n                \"7.........7\",\n                \"77777777777\"\n            ],\n            \"solution\":\"왼쪽 상단 사분면에 있는 1,4,9,3를 중심 축에 따라 4분면에 복제해 테두리(7)와 별 형태를 이룬다.\"\n        },\n        {\n            \"input\":[\n                \".6666666666\",\n                \"6.........6\",\n                \"6.2.......6\",\n                \"6..5.....6.\",\n                \"6...8....6.\",\n                \"6....8...6.\",\n                \"6.........6\",\n                \"6.........6\",\n                \"6.........6\",\n                \"6.........6\",\n                \"6666666666.\"\n            ],\n            \"output\":[\n                \"66666666666\",\n                \"6.........6\",\n                \"6.2.....2.6\",\n                \"6..5...5..6\",\n                \"6...8.8...6\",\n                \"6....8....6\",\n                \"6...8.8...6\",\n                \"6..5...5..6\",\n                \"6.2.....2.6\",\n                \"6.........6\",\n                \"66666666666\"\n            ],\n            \"solution\":\"중심부(5,5)에 가까운 사분면에 숫자(2,5,8)를 배치하고, 이를 상하좌우 네 방향으로 복제해서 테두리(6)와 내부 별을 채운다.\"\n        },\n        {\n            \"input\":[\n                \".3333333333\",\n                \"3.........3\",\n                \"3.7.......3\",\n                \"3..9.....3.\",\n                \"3...1....3.\",\n                \"3....2...3.\",\n                \"3.........3\",\n                \"3.........3\",\n                \"3.........3\",\n                \"3.........3\",\n                \"3333333333.\"\n            ],\n            \"output\":[\n                \"33333333333\",\n                \"3.........3\",\n                \"3.7.....7.3\",\n                \"3..9...9..3\",\n                \"3...1.1...3\",\n                \"3....2....3\",\n                \"3...1.1...3\",\n                \"3..9...9..3\",\n                \"3.7.....7.3\",\n                \"3.........3\",\n                \"33333333333\"\n            ],\n            \"solution\":\"테두리(3)를 완성하고, 내부 숫자(7,9,1,2) 사분면 복제 규칙으로 별과 장식이 4방향으로 반복되어 전체를 채운다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "26b7ade5-5f5c-4715-9887-cd400088a254.json",
    "uuid": "26b7ade5-5f5c-4715-9887-cd400088a254",
    "created": "2025-04-26 16:33:45",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [0,0,5,0,4,4,5,0,0],\n                [3,7,7,0,1,7,0,6,2],\n                [0,0,0,3,0,0,0,9,0],\n                [1,4,4,0,7,0,3,3,7],\n                [0,0,0,0,0,8,8,8,0],\n                [0,7,3,0,2,0,0,0,0],\n                [0,0,5,5,5,6,0,7,0]\n            ],\n            \"output\": [\n                [0,0,5,0,4,4,5,0,0],\n                [3,9,9,0,1,9,0,6,2],\n                [0,0,0,3,0,0,0,9,0],\n                [1,4,4,0,7,0,3,3,7],\n                [0,0,0,0,0,8,8,8,0],\n                [0,7,3,0,2,0,0,0,0],\n                [0,0,5,5,5,6,0,7,0]\n            ],\n            \"solution\": \"같은 행에서 Kid(2)와 7 사이에 장애물(3)이 없으면 7이 9로 변환된다.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,6,5,0,1,0,0,3],\n                [0,7,0,4,0,9,0,7,7,0],\n                [0,0,0,0,0,0,0,0,7,2],\n                [3,0,7,8,8,0,0,0,0,0],\n                [1,1,3,0,6,7,0,4,0,9],\n                [0,0,0,0,5,0,0,0,0,0],\n                [0,7,0,7,0,0,7,3,0,2],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,6,5,0,1,0,0,3],\n                [0,7,0,4,0,9,0,7,7,0],\n                [0,0,0,0,0,0,0,0,9,2],\n                [3,0,7,8,8,0,0,0,0,0],\n                [1,1,3,0,6,7,0,4,0,9],\n                [0,0,0,0,5,0,0,0,0,0],\n                [0,7,0,7,0,0,7,3,0,2],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"같은 행에서 Kid(2)와 이어진 7은 사이에 3이 없으면 9로 변한다.\"\n        },\n        {\n            \"input\": [\n                [7,3,7,0,0,5,2,0,0,7],\n                [0,0,1,0,7,7,0,3,0,7],\n                [5,5,0,4,3,0,7,0,0,0],\n                [0,2,0,7,0,0,0,7,9,0],\n                [3,0,0,0,6,0,1,0,0,3],\n                [7,4,5,6,0,0,0,7,7,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [7,3,7,0,0,5,2,0,0,9],\n                [0,0,1,0,7,7,0,3,0,7],\n                [5,5,0,4,3,0,7,0,0,0],\n                [0,2,0,7,0,0,0,7,9,0],\n                [3,0,0,0,6,0,1,0,0,3],\n                [7,4,5,6,0,0,0,7,7,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Kid(2)와 같은 행에 있는 7 중 3이 가로막지 않은 오른쪽 7 하나가 9로 변화.\"\n        },\n        {\n            \"input\": [\n                [0,7,7,7,3,7,7,7,0,5,5,2],\n                [4,4,0,0,1,0,0,3,0,7,8,9],\n                [0,0,0,0,3,7,0,0,0,0,0,0],\n                [0,0,0,5,0,0,9,0,3,0,6,0],\n                [2,0,0,7,7,7,0,3,7,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,7,7,7,3,9,9,9,0,5,5,2],\n                [4,4,0,0,1,0,0,3,0,7,8,9],\n                [0,0,0,0,3,7,0,0,0,0,0,0],\n                [0,0,0,5,0,0,9,0,3,0,6,0],\n                [2,0,0,7,7,7,0,3,7,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Kid(2)와 같은 행에서 7이 여러 개 있고, 중간에 3이 없으면 모두 9로 바뀐다.\"\n        },\n        {\n            \"input\": [\n                [3,7,0,7,2,0,7,7,0,0,5,5],\n                [0,0,0,3,0,0,0,1,0,7,8,9],\n                [7,7,7,7,0,3,0,7,0,0,4,0],\n                [0,9,0,0,0,0,3,0,0,4,0,7],\n                [1,0,0,0,8,8,8,0,0,0,0,0],\n                [0,0,0,6,0,5,0,0,0,7,0,2],\n                [3,7,7,7,0,0,0,6,0,0,0,0],\n                [0,4,4,0,7,0,0,3,8,0,9,9],\n                [0,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [3,9,0,9,2,0,9,9,0,0,5,5],\n                [0,0,0,3,0,0,0,1,0,7,8,9],\n                [7,7,7,7,0,3,0,7,0,0,4,0],\n                [0,9,0,0,0,0,3,0,0,4,0,7],\n                [1,0,0,0,8,8,8,0,0,0,0,0],\n                [0,0,0,6,0,5,0,0,0,7,0,2],\n                [3,7,7,7,0,0,0,6,0,0,0,0],\n                [0,4,4,0,7,0,0,3,8,0,9,9],\n                [0,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Kid(2)가 첫 행에 있고, 좌우의 7 사이에 3이 없으면 7이 9로 변한다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "2a5ae039-f7f2-4097-accd-3b6b7e824210.json",
    "uuid": "2a5ae039-f7f2-4097-accd-3b6b7e824210",
    "created": "2025-04-26 14:31:02",
    "description": "{\n    \"task\":[\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,2,0,0,0,0,0,0],\n                [0,0,2,2,2,0,0,0,0,0],\n                [0,0,0,2,2,2,0,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,2,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,3,3,0],\n                [0,0,0,0,0,0,0,3,3,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,2,0,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,0,2,2,2,0,0],\n                [0,0,0,0,0,0,2,2,2,0],\n                [0,0,0,0,0,0,0,2,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,3,3,0],\n                [0,0,0,0,0,0,0,3,3,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Rotate the '2' diamond 270°, '3' squares remain unchanged.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,4,4,4,4,0,0],\n                [0,0,2,2,2,0,0,0,0,0],\n                [0,0,2,0,0,0,0,0,0,0],\n                [0,0,2,0,0,0,0,0,0,0],\n                [0,0,2,2,2,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,4,4,4,4,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,2,2,2,2,0,0,0,0],\n                [0,0,2,0,0,2,0,0,0,0],\n                [0,0,2,0,0,2,0,0,0,0],\n                [0,0,2,2,2,2,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Rotate the '2' L-shape 270°, '4' row remains unchanged.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,2,0,0,0,0,0,0],\n                [0,0,2,2,2,0,0,0,0,0],\n                [0,2,2,2,2,2,0,0,0,0],\n                [2,2,2,2,2,2,2,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,0,0,7,0,0,0,0],\n                [0,0,0,0,0,0,2,2,2,2],\n                [0,0,0,0,0,0,2,2,2,0],\n                [0,0,0,0,0,0,2,2,0,0],\n                [0,0,0,0,0,0,2,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Rotate the '2' large triangle 270°, '7' column stays as is.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,2,2,2,0,0,0,0,0,0],\n                [0,0,2,0,0,0,0,0,0,0],\n                [0,0,2,0,0,0,0,0,0,0],\n                [0,0,2,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,0,0,8,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,2,2,2,0,0,0,0,0,0],\n                [0,2,0,0,0,0,0,0,0,0],\n                [0,2,0,0,0,0,0,0,0,0],\n                [0,2,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Rotate the '2' T-shape 270°, '8' column remains unchanged.\"\n        },\n        {\n            \"input\": [\n                [9,0,0,0,0,0,0,0,0,0],\n                [0,9,0,0,0,0,0,0,0,0],\n                [0,0,9,0,0,0,0,0,0,0],\n                [0,0,0,9,0,0,0,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,2,0,2,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [9,0,0,0,0,0,0,0,0,0],\n                [0,9,0,0,0,0,0,0,0,0],\n                [0,0,9,0,0,0,0,0,0,0],\n                [0,0,0,9,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,2,0,2,0,0,0],\n                [0,0,0,0,2,2,2,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"Rotate the '2' cross 270°, '9' diagonal stays unchanged.\"\n        }\n    ]\n}"
  },
  {
    "filename": "2ec1a507-c27b-4600-94c2-163b18066505.json",
    "uuid": "2ec1a507-c27b-4600-94c2-163b18066505",
    "created": "2025-04-26 15:10:14",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [0,7,0,3,0,7,0],\n                [2,2,2,2,2,0,0],\n                [0,2,0,9,0,2,3],\n                [0,2,2,2,2,2,0],\n                [3,0,2,0,0,0,0],\n                [0,3,2,2,0,0,0],\n                [0,0,0,0,0,7,0]\n            ],\n            \"output\": [\n                [0,7,0,9,0,7,0],\n                [2,2,2,2,2,0,0],\n                [0,2,0,0,0,2,0],\n                [0,2,2,2,2,2,0],\n                [0,0,2,0,0,0,0],\n                [0,0,2,2,0,0,0],\n                [0,0,0,0,0,7,0]\n            ],\n            \"solution\": \"Move 9 above the topmost row of 2s. Replace unused 3s with 0.\"\n        },\n        {\n            \"input\": [\n                [0,0,4,3,3,0,7,0],\n                [0,2,2,2,2,2,0,0],\n                [0,2,0,0,0,2,3,0],\n                [4,2,2,2,2,2,2,4],\n                [0,9,0,0,0,3,2,0],\n                [0,0,2,2,3,2,0,0],\n                [0,3,2,2,2,0,0,7],\n                [0,0,0,7,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,4,9,3,0,7,0],\n                [0,2,2,2,2,2,0,0],\n                [0,2,0,0,0,2,0,0],\n                [4,2,2,2,2,2,2,4],\n                [0,0,0,0,0,0,2,0],\n                [0,0,2,2,0,2,0,0],\n                [0,0,2,2,2,0,0,7],\n                [0,0,0,7,0,0,0,0]\n            ],\n            \"solution\": \"Place 9 atop the upper row of 2s. Remove 3s that are not adjacent to the body.\"\n        },\n        {\n            \"input\": [\n                [7,0,3,3,8,0,0,1,0],\n                [2,2,2,2,0,2,0,0,0],\n                [2,0,0,2,3,2,3,0,8],\n                [0,0,2,2,2,2,2,7,0],\n                [0,0,9,0,0,3,0,0,0],\n                [3,2,2,2,0,2,2,0,0],\n                [8,0,0,0,2,2,0,3,0],\n                [0,0,1,8,0,0,0,0,0],\n                [0,7,0,0,3,0,0,8,0]\n            ],\n            \"output\": [\n                [7,0,9,3,8,0,0,1,0],\n                [2,2,2,2,0,2,0,0,0],\n                [2,0,0,2,0,2,0,0,8],\n                [0,0,2,2,2,2,2,7,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,2,2,2,0,2,2,0,0],\n                [8,0,0,0,2,2,0,0,0],\n                [0,0,1,8,0,0,0,0,0],\n                [0,7,0,0,0,0,0,8,0]\n            ],\n            \"solution\": \"Elevate 9 near the top 2. Set distant 3s to 0, keeping the environment (7,8,1) unchanged.\"\n        },\n        {\n            \"input\": [\n                [0,8,3,3,0,6,0,0],\n                [0,2,2,2,2,2,3,0],\n                [1,0,2,0,9,2,0,0],\n                [0,2,2,2,2,2,2,0],\n                [0,3,0,0,2,3,0,0],\n                [6,2,2,0,0,2,2,0],\n                [0,0,3,0,0,0,0,8],\n                [0,0,8,0,0,6,0,0]\n            ],\n            \"output\": [\n                [0,8,9,3,0,6,0,0],\n                [0,2,2,2,2,2,0,0],\n                [1,0,2,0,0,2,0,0],\n                [0,2,2,2,2,2,2,0],\n                [0,0,0,0,2,0,0,0],\n                [6,2,2,0,0,2,2,0],\n                [0,0,0,0,0,0,0,8],\n                [0,0,8,0,0,6,0,0]\n            ],\n            \"solution\": \"Shift 9 above the first row of 2s and zero out isolated 3s; keep 6,8,1 intact.\"\n        },\n        {\n            \"input\": [\n                [2,2,2,2,2,0,0],\n                [0,2,0,0,2,3,0],\n                [0,2,2,2,2,2,7],\n                [3,0,3,9,0,2,0],\n                [0,0,2,2,2,0,0],\n                [7,3,0,0,6,0,0],\n                [0,0,0,7,0,0,1]\n            ],\n            \"output\": [\n                [9,2,2,2,2,0,0],\n                [0,2,0,0,2,0,0],\n                [0,2,2,2,2,2,7],\n                [0,0,0,0,0,2,0],\n                [0,0,2,2,2,0,0],\n                [7,0,0,0,6,0,0],\n                [0,0,0,7,0,0,1]\n            ],\n            \"solution\": \"Place 9 on top row, directly above the body. Turn all non-adjacent 3s to 0.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "3069afc5-fdaf-44fb-ac4d-1636e7e96cae.json",
    "uuid": "3069afc5-fdaf-44fb-ac4d-1636e7e96cae",
    "created": "2025-04-26 13:13:40",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,2,2,0,3,4,0,1],\n                [1,0,0,0,0,0,0,5,1],\n                [1,2,0,0,6,0,3,0,1],\n                [1,0,6,0,2,0,0,0,1],\n                [1,3,0,4,0,2,6,0,1],\n                [1,0,0,0,5,0,0,2,1],\n                [1,0,2,4,0,3,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,2,2,2,1],\n                [1,0,2,0,0,0,0,5,1],\n                [1,6,0,2,0,0,3,0,1],\n                [1,0,0,0,0,2,0,0,1],\n                [1,3,0,0,2,0,6,0,1],\n                [1,5,0,0,0,0,0,2,1],\n                [1,0,4,3,0,0,2,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"2만 중심 기준 270도 회전 후, 다른 객체와 겹치면 7로 변환하는 규칙\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,5,0,0,0,2,0,1],\n                [1,2,0,0,4,0,0,6,1],\n                [1,0,0,3,0,0,0,0,1],\n                [1,0,0,0,6,0,4,0,1],\n                [1,2,0,0,0,3,0,0,1],\n                [1,0,0,4,0,0,0,2,1],\n                [1,5,0,0,2,0,3,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,2,0,0,0,0,5,0,1],\n                [1,5,0,0,4,0,0,6,1],\n                [1,0,0,3,0,0,0,0,1],\n                [1,0,0,0,6,0,4,0,1],\n                [1,2,0,0,0,3,0,0,1],\n                [1,0,0,4,0,0,0,2,1],\n                [1,5,0,0,2,0,3,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"5만 좌상단↔우하단 대각선 반사, 겹치면 8로 합쳐짐\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,4,0,3,0,0,6,1],\n                [1,2,0,0,0,0,4,0,1],\n                [1,0,0,6,4,3,0,0,1],\n                [1,5,4,0,0,0,0,2,1],\n                [1,0,0,3,0,6,4,0,1],\n                [1,0,2,0,0,0,0,0,1],\n                [1,0,0,0,4,0,5,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,4,4,4,3,4,4,6,1],\n                [1,2,4,4,4,4,4,0,1],\n                [1,0,4,6,4,3,4,0,1],\n                [1,5,4,4,4,4,4,2,1],\n                [1,0,4,3,4,6,4,0,1],\n                [1,0,2,4,4,4,4,0,1],\n                [1,0,4,4,4,4,5,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"4('^')가 주변 8칸을 확장, 다른 객체와 겹치면 7('@')로 변환\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,2,0,0,3,0,0,1],\n                [1,4,0,6,0,0,0,5,1],\n                [1,0,0,0,2,0,5,0,1],\n                [1,3,0,0,0,4,0,0,1],\n                [1,0,6,0,3,0,0,0,1],\n                [1,0,0,0,0,2,4,0,1],\n                [1,0,0,0,0,0,0,2,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,4,0,6,0,0,0,5,1],\n                [1,0,0,0,0,0,5,0,1],\n                [1,3,0,0,2,4,0,0,1],\n                [1,0,6,0,0,2,0,0,1],\n                [1,0,0,0,0,0,4,0,1],\n                [1,0,2,0,3,0,0,7,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"2('*')와 3('+')만 아래로 떨어지고, 겹치면 '@'(7)로 합쳐짐\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,3,0,0,0,2,0,1],\n                [1,0,0,2,4,5,0,0,1],\n                [1,6,3,0,0,0,0,0,1],\n                [1,0,0,0,3,2,0,4,1],\n                [1,0,2,0,5,0,3,0,1],\n                [1,0,0,0,0,0,6,0,1],\n                [1,4,0,0,0,3,0,2,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,3,3,0,0,2,0,1],\n                [1,0,3,3,4,5,2,0,1],\n                [1,6,3,3,0,0,0,0,1],\n                [1,0,0,0,3,2,0,4,1],\n                [1,0,2,9,5,0,3,0,1],\n                [1,0,0,0,0,0,6,0,1],\n                [1,4,0,0,0,3,0,2,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"3('+')를 2×2로 확대, 겹치면 '9'(¤)로 합성\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "3a57a16d-e8ce-46af-8ae5-173217239c2a.json",
    "uuid": "3a57a16d-e8ce-46af-8ae5-173217239c2a",
    "created": "2025-04-26 13:41:45",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [1,1,1,1,0,0,0,0],\n                [1,0,4,4,0,9,0,0],\n                [1,2,2,0,0,9,0,0],\n                [1,2,0,0,5,5,0,0],\n                [1,2,0,0,5,5,0,0],\n                [1,0,0,0,0,0,0,0],\n                [1,0,0,7,7,0,0,0],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,0,0,0,0],\n                [1,0,4,4,0,9,0,0],\n                [1,0,0,2,0,9,0,0],\n                [1,0,0,2,5,5,0,0],\n                [1,2,0,0,5,5,0,0],\n                [1,2,0,0,0,0,0,0],\n                [1,0,0,7,7,0,0,0],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"사람(2)이 상단 일부가 오른쪽으로 이동하여 뒤로 기울어짐을 표현. 나머지 객체(창문=4, 그림=9, 의자=5, 램프=7)는 그대로 유지.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,0,4,4,0,0,1],\n                [1,0,8,0,4,0,2,1],\n                [1,0,8,0,0,5,2,1],\n                [1,0,8,5,5,5,0,1],\n                [1,0,0,0,0,0,0,1],\n                [1,0,9,9,0,7,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,0,4,4,0,0,1],\n                [1,0,0,8,4,0,2,1],\n                [1,0,0,8,0,5,2,1],\n                [1,0,8,5,5,5,0,1],\n                [1,0,8,0,0,0,0,1],\n                [1,0,9,9,0,7,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"소파(8)가 위쪽 부분이 오른쪽으로 살짝 이동해 '기울어진' 형상이 됨. 사람(2)와 의자(5)는 위치 변화 적음.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,4,4,0,0,3,3],\n                [1,0,9,9,0,0,3,0],\n                [1,2,0,5,5,0,0,0],\n                [1,2,0,5,5,0,0,0],\n                [1,2,6,6,0,0,7,0],\n                [1,0,0,6,6,0,7,0],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,4,4,0,0,3,3],\n                [1,0,9,9,0,0,3,0],\n                [1,0,2,5,5,0,0,0],\n                [1,0,2,5,5,0,0,0],\n                [1,2,0,6,0,0,7,0],\n                [1,2,6,0,6,0,7,0],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"사람(2)이 일부가 왼쪽 혹은 아래로 재배치되며 앞쪽으로 이동했음을 표현. 테이블(6), 램프(7) 위치는 미세 조정.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,0,0,9,9,0,1],\n                [1,0,0,0,9,9,0,1],\n                [1,2,2,2,0,4,4,1],\n                [1,5,5,5,0,4,4,1],\n                [1,8,8,5,0,4,0,1],\n                [1,8,8,5,0,7,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,0,0,9,9,0,1],\n                [1,0,0,0,9,9,0,1],\n                [1,0,2,2,4,4,0,1],\n                [1,5,2,5,4,4,0,1],\n                [1,8,8,5,0,4,0,1],\n                [1,8,8,5,0,7,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"가운데 있던 사람(2) 무리가 창문(4) 쪽으로 기울면서 재배치되어, '놀람' 혹은 '이동'을 표현. 의자(5), 소파(8), 그림(9)은 거의 그대로.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,4,4,0,0,0,1],\n                [1,0,0,0,2,2,3,1],\n                [1,0,0,5,5,5,3,1],\n                [1,0,6,6,0,5,5,1],\n                [1,8,8,8,0,7,0,1],\n                [1,0,9,9,9,0,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1],\n                [1,0,4,4,0,0,0,1],\n                [1,0,0,0,0,2,3,1],\n                [1,0,0,5,5,5,3,1],\n                [1,0,6,6,2,5,5,1],\n                [1,8,8,8,0,7,0,1],\n                [1,0,9,9,9,0,7,1],\n                [1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"사람(2,3)이 일부가 오른쪽으로 기울어지며, 테이블(6), 소파(8) 등은 유지. 좌석(5) 주변 인물만 이동하여 아날로지(뒤로 젖힘) 구현.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "3bb2a765-763b-4b49-8be3-d2f60d1809a7.json",
    "uuid": "3bb2a765-763b-4b49-8be3-d2f60d1809a7",
    "created": "2025-04-26 12:33:21",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,1,0,0,3,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,1,0,0,0,9],\n                [9,0,0,0,2,0,0,0,0,9],\n                [9,0,0,0,0,0,0,3,0,9],\n                [9,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,3,0,0,9],\n                [9,0,0,0,1,2,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,3,0,0,0,0,0,0,9],\n                [9,0,0,0,0,1,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"Each object rotates 45° around the center(@=2) then moves out by 1 cell, stopping if blocked by 9.\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,5,0,0,0,0,9],\n                [9,0,4,1,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,2,0,0,5,0,9],\n                [9,0,0,4,0,0,0,0,0,9],\n                [9,0,1,0,0,0,0,0,0,9],\n                [9,0,0,0,0,0,4,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,4,1,0,0,0,9],\n                [9,0,0,5,0,0,0,0,0,9],\n                [9,0,0,0,2,0,0,4,0,9],\n                [9,0,1,0,0,0,0,0,0,9],\n                [9,0,0,5,0,0,0,0,0,9],\n                [9,0,0,0,0,1,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"Apply the same rotation and radial step for each symbol, avoiding walls.\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9,9,9],\n                [9,0,4,0,0,0,0,0,3,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,6,0,0,0,0,0,9],\n                [9,0,0,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,0,2,0,0,0,9],\n                [9,0,0,1,1,1,0,0,0,0,0,9],\n                [9,0,3,0,0,4,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,6,9],\n                [9,9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,4,0,3,0,0,0,0,9],\n                [9,0,0,0,0,6,0,0,0,0,0,9],\n                [9,0,0,0,1,1,0,0,0,0,0,9],\n                [9,0,0,0,0,2,0,0,0,0,0,9],\n                [9,0,0,0,1,1,1,0,0,0,0,9],\n                [9,0,3,0,0,4,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,6,0,0,0,0,0,9],\n                [9,0,0,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,3,0,9],\n                [9,9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"Rotate each number 45° around the single center(@=2), shifting out one unit.\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,0,0,0,8,0,0,0,9],\n                [9,0,0,0,7,0,0,0,0,0,0,9],\n                [9,0,0,0,0,1,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,1,0,0,0,9],\n                [9,0,0,0,0,2,0,0,0,0,0,9],\n                [9,0,1,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,7,0,0,0,9],\n                [9,0,0,0,0,8,0,1,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,8,0,9],\n                [9,9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9,9,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,0,8,0,0,1,0,0,9],\n                [9,0,0,0,7,0,0,0,0,0,0,9],\n                [9,0,0,0,0,1,0,0,0,0,0,9],\n                [9,0,0,0,0,2,0,0,8,0,0,9],\n                [9,0,0,0,0,0,0,0,0,0,0,9],\n                [9,0,0,0,1,0,0,7,0,0,0,9],\n                [9,0,8,0,0,0,1,0,0,0,0,9],\n                [9,0,0,0,0,0,0,0,0,1,0,9],\n                [9,0,0,0,0,0,0,0,0,8,0,9],\n                [9,9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"Center-based rotation with 45°, expand radius by 1. Different numbers represent different shapes.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "6cac6763-f44c-4f85-8270-47706fd3d4e1.json",
    "uuid": "6cac6763-f44c-4f85-8270-47706fd3d4e1",
    "created": "2025-04-26 15:34:48",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "76683b43-0aa2-4578-a806-702fd6a3549d.json",
    "uuid": "76683b43-0aa2-4578-a806-702fd6a3549d",
    "created": "2025-04-26 13:05:16",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "79fb23f0-08b4-4819-b864-0fbe33fab1bb.json",
    "uuid": "79fb23f0-08b4-4819-b864-0fbe33fab1bb",
    "created": "2025-04-26 13:04:57",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [0,0,0,4,4,4,0,0,0],\n                [0,6,1,1,1,1,6,0,0],\n                [0,6,1,0,0,1,6,3,0],\n                [0,6,1,1,1,1,6,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,4,7,7,7,7,4,0,0],\n                [0,4,0,2,2,0,4,0,0],\n                [0,4,7,7,7,7,4,0,0],\n                [0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,4,4,4,0,0,0],\n                [0,6,1,1,1,1,6,0,0],\n                [0,6,0,0,0,0,6,3,0],\n                [0,6,1,1,1,1,6,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,4,7,7,7,7,4,0,0],\n                [0,4,0,2,2,0,4,0,0],\n                [0,4,7,7,7,7,4,0,0],\n                [0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"팩맨(3)이 위치한 행(Row2)의 1을 모두 0으로 치환한다.\"\n        },\n        {\n            \"input\": [\n                [6,0,0,0,0,0,2,0,0],\n                [6,1,1,1,1,0,2,4,0],\n                [6,1,1,1,1,5,2,4,3],\n                [6,1,1,1,1,0,2,4,0],\n                [0,0,0,0,0,0,2,0,0],\n                [0,0,0,7,7,0,0,0,0],\n                [0,0,0,7,7,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [6,0,0,0,0,0,2,0,0],\n                [6,1,1,1,1,0,2,4,0],\n                [6,0,0,0,0,5,2,4,3],\n                [6,1,1,1,1,0,2,4,0],\n                [0,0,0,0,0,0,2,0,0],\n                [0,0,0,7,7,0,0,0,0],\n                [0,0,0,7,7,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"팩맨(3)이 위치한 행(Row2)의 1을 모두 0으로 치환한다.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,4,4,4,0,0,0],\n                [0,6,1,1,1,1,1,6,0,0],\n                [0,6,1,0,2,2,0,6,0,0],\n                [0,6,1,1,2,2,1,6,0,0],\n                [0,6,1,1,2,2,1,6,0,0],\n                [0,6,1,1,2,2,1,6,3,0],\n                [0,6,1,0,2,2,0,6,0,0],\n                [0,6,1,1,1,1,1,6,0,0],\n                [0,0,0,0,0,5,5,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,4,4,4,0,0,0],\n                [0,6,1,1,1,1,1,6,0,0],\n                [0,6,1,0,2,2,0,6,0,0],\n                [0,6,1,1,2,2,1,6,0,0],\n                [0,6,1,1,2,2,1,6,0,0],\n                [0,6,0,0,2,2,0,6,3,0],\n                [0,6,1,0,2,2,0,6,0,0],\n                [0,6,1,1,1,1,1,6,0,0],\n                [0,0,0,0,0,5,5,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"팩맨(3)이 위치한 행(Row5)의 1을 모두 0으로 치환한다.\"\n        },\n        {\n            \"input\": [\n                [0,0,7,7,0,4,4,4,0,0],\n                [6,1,1,1,0,0,0,0,0,0],\n                [6,1,2,2,2,2,0,0,0,0],\n                [6,1,2,0,0,2,0,5,0,0],\n                [6,1,2,0,0,2,0,5,3,0],\n                [6,1,2,2,2,2,0,0,0,0],\n                [6,1,1,1,0,0,0,0,0,0],\n                [0,0,0,7,7,4,4,4,0,0],\n                [0,0,6,0,0,0,0,6,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,7,7,0,4,4,4,0,0],\n                [6,1,1,1,0,0,0,0,0,0],\n                [6,1,2,2,2,2,0,0,0,0],\n                [6,1,2,0,0,2,0,5,0,0],\n                [6,0,2,0,0,2,0,5,3,0],\n                [6,1,2,2,2,2,0,0,0,0],\n                [6,1,1,1,0,0,0,0,0,0],\n                [0,0,0,7,7,4,4,4,0,0],\n                [0,0,6,0,0,0,0,6,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"팩맨(3)이 위치한 행(Row4)의 1을 모두 0으로 치환한다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "863e1072-252a-48a2-b1ec-0533087619f9.json",
    "uuid": "863e1072-252a-48a2-b1ec-0533087619f9",
    "created": "2025-04-26 13:50:23",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9],\n                [9,1,1,1,0,2,2,9,9],\n                [9,1,0,1,0,2,2,9,9],\n                [9,1,1,1,0,0,2,9,9],\n                [9,0,0,0,4,4,0,9,9],\n                [9,0,7,7,7,4,0,9,9],\n                [9,0,7,0,7,0,0,9,9],\n                [9,0,7,7,7,0,0,9,9],\n                [9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9],\n                [9,0,1,1,1,2,2,0,9],\n                [9,1,1,0,2,2,0,0,9],\n                [9,0,1,1,0,2,0,0,9],\n                [9,0,0,0,4,4,0,0,9],\n                [9,0,7,7,7,4,0,0,9],\n                [9,0,0,7,0,0,0,0,9],\n                [9,0,7,7,7,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"중심 (5,5)을 기준으로 모든 객체를 2칸 시계방향 이동 후, 겹치는 칸은 (합 mod 10)로 처리\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,8,8,8,0,1,1,0,0,9],\n                [9,8,0,8,0,1,1,1,0,9],\n                [9,8,8,8,0,1,1,0,0,9],\n                [9,0,0,0,4,4,0,2,2,9],\n                [9,0,0,4,4,0,4,2,2,9],\n                [9,0,6,6,0,4,2,2,2,9],\n                [9,0,6,0,6,0,2,2,2,9],\n                [9,0,6,6,6,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,8,8,8,1,1,0,0,9],\n                [9,8,8,0,1,1,1,0,0,9],\n                [9,0,0,8,1,1,0,0,0,9],\n                [9,0,0,0,4,4,2,2,0,9],\n                [9,0,0,4,4,0,2,2,0,9],\n                [9,0,6,6,4,2,2,2,0,9],\n                [9,0,6,0,6,0,2,2,0,9],\n                [9,0,6,6,6,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"중심 (5,5)에서 2칸씩 시계방향 소용돌이, 겹침은 (합 mod 10) 적용\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,1,0,1,0,2,2,2,2,9],\n                [9,1,1,1,0,2,0,0,2,9],\n                [9,0,1,0,1,0,2,2,2,9],\n                [9,0,0,0,4,4,4,4,0,9],\n                [9,0,0,4,4,0,5,5,0,9],\n                [9,3,3,3,0,0,5,0,5,9],\n                [9,3,0,3,3,0,5,5,5,9],\n                [9,3,3,3,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9],\n                [9,0,1,1,2,2,2,2,0,9],\n                [9,1,1,0,2,0,0,2,0,9],\n                [9,0,1,1,0,2,2,2,0,9],\n                [9,0,0,4,4,4,4,0,0,9],\n                [9,0,0,4,4,0,5,5,0,9],\n                [9,3,3,3,0,0,5,5,0,9],\n                [9,3,0,3,3,0,5,0,0,9],\n                [9,3,3,3,0,0,0,0,0,9],\n                [9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"중심 (5,5)에서 모든 1~8 객체를 2칸 시계방향 이동, 중첩 시 (합 mod 10)\"\n        },\n        {\n            \"input\": [\n                [9,9,9,9,9,9,9,9,9,9,9],\n                [9,1,1,0,2,2,2,0,3,3,0],\n                [9,1,0,1,2,0,2,3,0,3,0],\n                [9,1,1,1,2,2,2,3,3,3,0],\n                [9,0,0,0,0,4,4,4,4,0,0],\n                [9,0,5,5,0,4,0,4,0,6,0],\n                [9,0,5,0,5,4,4,4,6,6,0],\n                [9,0,5,5,5,0,0,6,6,6,0],\n                [9,7,7,7,0,0,6,6,0,0,0],\n                [9,7,0,7,7,0,6,0,6,0,0],\n                [9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"output\": [\n                [9,9,9,9,9,9,9,9,9,9,9],\n                [9,0,1,1,2,2,2,3,3,0,0],\n                [9,1,1,0,2,0,2,3,0,0,0],\n                [9,0,1,1,2,2,2,3,3,0,0],\n                [9,0,0,0,4,4,4,4,0,0,0],\n                [9,0,5,5,0,4,0,4,6,0,0],\n                [9,0,5,5,0,4,4,4,6,6,0],\n                [9,0,0,5,5,0,6,6,6,0,0],\n                [9,7,7,7,0,0,6,6,0,0,0],\n                [9,7,0,7,7,0,6,0,0,0,0],\n                [9,9,9,9,9,9,9,9,9,9,9]\n            ],\n            \"solution\": \"격자를 2칸씩 시계방향 회전(A 규칙), 중심은 (6,6)이며 중첩 시 합계 mod 10\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "964bbf21-9637-4ebb-9152-b786d77e32af.json",
    "uuid": "964bbf21-9637-4ebb-9152-b786d77e32af",
    "created": "2025-04-26 16:08:24",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,7,7,7,7,0,0,0,0,0],\n        [0,0,7,7,7,7,7,7,0,0,0,0],\n        [0,7,7,7,0,4,0,7,7,7,0,0],\n        [0,7,7,7,4,4,4,7,7,7,0,0],\n        [0,7,7,7,0,4,0,7,7,7,0,0],\n        [0,0,7,7,7,7,7,7,0,0,0,0],\n        [0,0,0,7,7,7,7,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [7,7,7,7,0,0,0,0,0,4,4,4],\n        [7,7,7,7,0,0,0,0,0,4,4,4],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,4,4,4,0,0,0,7,7,7],\n        [0,0,0,4,4,4,0,0,0,7,7,7],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"중앙의 원형(7)과 별(4)을 분리하여 7은 상단 모서리, 4는 하단 모서리로 분산한다.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,8,0,0,0,0,0,0,0],\n        [0,0,0,8,8,8,0,0,0,0,0,0],\n        [0,0,8,8,8,8,8,0,0,0,0,0],\n        [0,8,8,8,8,8,8,8,0,0,0,0],\n        [0,8,8,5,5,8,8,8,0,0,0,0],\n        [0,8,8,8,8,8,8,8,0,0,0,0],\n        [0,0,8,8,8,8,8,0,0,0,0,0],\n        [0,0,0,8,8,8,0,0,0,0,0,0],\n        [0,0,0,0,8,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [8,8,0,0,0,0,0,8,8,0,0,0],\n        [8,8,0,0,0,0,0,8,8,0,0,0],\n        [0,8,8,0,0,0,0,8,8,8,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,8,8,5],\n        [0,0,0,0,0,0,0,0,0,8,5,5],\n        [0,0,0,0,0,0,0,0,0,5,5,5],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"중앙 큰 마름모(8)와 내부 사각(5)을 각기 다른 모서리 구역으로 분산한다.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,9,9,9,9,0,0,0,0,0],\n        [0,0,9,9,0,0,9,9,0,0,0,0],\n        [0,9,9,0,0,3,0,0,9,9,0,0],\n        [0,9,9,0,3,3,3,0,9,9,0,0],\n        [0,9,9,0,0,3,0,0,9,9,0,0],\n        [0,9,9,0,0,0,0,0,9,9,0,0],\n        [0,0,9,9,9,9,9,9,0,0,0,0],\n        [0,0,0,9,9,9,9,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [9,9,9,0,0,0,0,9,9,9,0,0],\n        [9,0,0,9,0,0,9,0,0,9,0,0],\n        [9,0,0,0,0,0,0,0,0,9,0,3],\n        [0,9,0,0,0,0,0,0,9,0,0,3],\n        [0,0,9,0,0,0,0,9,0,0,0,3],\n        [0,0,0,9,0,0,9,0,0,0,0,0],\n        [0,0,0,9,0,0,9,0,0,0,0,0],\n        [0,0,9,0,0,0,0,9,0,0,3,0],\n        [0,9,0,0,0,3,0,0,9,3,3,0],\n        [9,0,0,0,3,3,3,0,0,0,0,0],\n        [9,9,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"9(링)과 내부 3(십자)를 분리, 링은 사방 모서리로, 십자는 틈새로 분산한다.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,6,6,6,0,0,0,0,0,0,0],\n        [0,6,6,6,6,6,0,0,0,0,0,0],\n        [6,6,6,6,6,6,6,0,0,0,0,0],\n        [2,0,2,0,2,0,2,0,0,0,0,0],\n        [0,0,0,2,2,2,0,0,0,0,0,0],\n        [0,0,0,0,2,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [6,6,6,6,6,0,0,6,6,6,6,6],\n        [6,6,6,6,0,0,0,0,6,6,6,6],\n        [6,6,6,0,0,0,0,0,0,6,6,6],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,2,2,2,0,0,0,2,2,2,0,0],\n        [0,2,0,2,0,0,0,2,0,2,0,0],\n        [0,2,0,0,0,0,0,0,0,2,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"큰 삼각(6)과 작은 삼각(2)을 분리해 위쪽·아래쪽 모서리 부근으로 이중 분산한다.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "99d9e067-0c0f-45f9-82b5-4c51b3197333.json",
    "uuid": "99d9e067-0c0f-45f9-82b5-4c51b3197333",
    "created": "2025-04-26 14:31:14",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "a534896b-2123-4a97-8023-5f6efe46a324.json",
    "uuid": "a534896b-2123-4a97-8023-5f6efe46a324",
    "created": "2025-04-26 12:41:20",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [5, 6, 6, 5, 0, 0, 4, 0],\n                [0, 0, 0, 9, 9, 0, 0, 0],\n                [0, 8, 8, 9, 0, 0, 0, 0],\n                [0, 8, 0, 0, 0, 7, 0, 0],\n                [0, 8, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 4, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [5, 6, 6, 5, 0, 0, 4, 0],\n                [0, 0, 0, 9, 9, 0, 0, 0],\n                [0, 8, 8, 9, 0, 0, 7, 0],\n                [0, 8, 0, 0, 0, 0, 8, 0],\n                [0, 8, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 4, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"사람(8)이 책상(9) 주변을 지나 의자(7)에 접근해 앉는 모습을 표현\"\n        },\n        {\n            \"input\": [\n                [5, 5, 5, 0, 0, 0, 0, 0],\n                [8, 8, 8, 8, 0, 6, 0, 0],\n                [8, 0, 0, 8, 0, 0, 9, 0],\n                [8, 0, 0, 8, 0, 0, 9, 0],\n                [0, 0, 0, 0, 4, 0, 0, 0],\n                [0, 0, 0, 0, 4, 0, 0, 7],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [5, 5, 5, 0, 0, 0, 0, 0],\n                [8, 8, 8, 0, 0, 6, 0, 0],\n                [8, 0, 0, 0, 0, 0, 9, 0],\n                [8, 0, 0, 8, 0, 0, 9, 0],\n                [0, 0, 0, 0, 4, 0, 0, 0],\n                [0, 0, 0, 0, 4, 0, 0, 7],\n                [0, 0, 0, 0, 0, 0, 0, 8],\n                [0, 0, 0, 0, 0, 0, 0, 8]\n            ],\n            \"solution\": \"위쪽 사람 블록이 의자(7)가 있는 오른쪽 아래로 일부 이동 후 앉는 규칙\"\n        },\n        {\n            \"input\": [\n                [5, 6, 0, 8, 8, 8, 0, 0],\n                [0, 0, 0, 0, 0, 8, 0, 4],\n                [0, 9, 9, 0, 0, 0, 0, 0],\n                [8, 8, 0, 7, 0, 0, 0, 8],\n                [0, 0, 0, 0, 0, 0, 8, 8],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 4, 0, 0, 0, 0, 0, 0],\n                [5, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [5, 6, 0, 8, 8, 8, 0, 0],\n                [0, 0, 0, 0, 0, 8, 0, 4],\n                [0, 9, 9, 0, 8, 0, 0, 0],\n                [8, 8, 0, 7, 8, 0, 0, 0],\n                [0, 0, 0, 0, 8, 0, 8, 0],\n                [0, 0, 0, 0, 0, 0, 0, 8],\n                [0, 4, 0, 0, 0, 0, 0, 0],\n                [5, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"여러 군데 흩어진 사람(8)이 중앙 의자(7)를 중심으로 모이도록 재배치\"\n        },\n        {\n            \"input\": [\n                [5, 5, 6, 0, 0, 0, 0, 0],\n                [0, 7, 0, 0, 9, 9, 0, 0],\n                [4, 0, 0, 0, 0, 0, 0, 0],\n                [4, 0, 8, 8, 8, 0, 0, 0],\n                [0, 0, 8, 8, 8, 8, 0, 0],\n                [0, 0, 0, 0, 8, 8, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [5, 5, 6, 0, 0, 0, 0, 0],\n                [0, 7, 0, 0, 9, 9, 0, 0],\n                [4, 0, 0, 0, 0, 0, 0, 0],\n                [4, 0, 8, 8, 8, 0, 0, 0],\n                [0, 0, 8, 8, 8, 8, 0, 0],\n                [0, 0, 0, 8, 8, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"가로로 퍼진 사람(8) 블록이 왼쪽 의자(7)와 일부 겹쳐 앉는 형태로 재배치\"\n        },\n        {\n            \"input\": [\n                [5, 0, 0, 6, 6, 0, 0, 7],\n                [0, 9, 9, 0, 0, 0, 0, 0],\n                [0, 9, 0, 0, 0, 4, 0, 0],\n                [0, 0, 0, 8, 0, 0, 4, 0],\n                [0, 8, 8, 8, 0, 0, 0, 0],\n                [0, 8, 8, 0, 0, 0, 0, 0],\n                [5, 5, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [5, 0, 0, 6, 6, 0, 8, 7],\n                [0, 9, 9, 0, 0, 0, 8, 0],\n                [0, 9, 0, 0, 0, 4, 0, 0],\n                [0, 0, 0, 8, 0, 0, 4, 0],\n                [0, 8, 8, 8, 0, 0, 0, 0],\n                [0, 8, 8, 0, 0, 0, 0, 0],\n                [5, 5, 0, 0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"아래서 위로 올라간 사람(8)이 오른쪽 상단 의자(7)에 일부 겹쳐 앉는 모습\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "a9563a2f-b5be-4d4f-89a6-e97e731db261.json",
    "uuid": "a9563a2f-b5be-4d4f-89a6-e97e731db261",
    "created": "2025-04-26 15:33:39",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [8,8,8,8,8,8,8,8],\n        [8,0,9,9,0,0,0,8],\n        [8,3,0,0,0,0,3,8],\n        [8,0,1,1,0,3,0,8],\n        [8,0,1,1,0,0,0,8],\n        [8,3,0,0,0,0,3,8],\n        [8,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [8,8,8,8,8,8,8,8],\n        [8,0,9,9,0,0,0,8],\n        [8,3,1,1,0,0,3,8],\n        [8,0,0,0,0,3,0,8],\n        [8,0,0,0,0,0,0,8],\n        [8,3,1,1,0,0,3,8],\n        [8,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8]\n      ],\n      \"solution\": \"Row=3 구슬들은 위로 1칸, Row=4 구슬들은 아래로 1칸 이동. 사각형(3), 막대(9), 프레임(8)에 막히면 이동 불가.\"\n    },\n    {\n      \"input\": [\n        [8,8,8,8,8,8,8,8],\n        [8,0,9,9,0,0,0,8],\n        [8,0,0,2,0,2,0,8],\n        [8,0,1,1,1,0,0,8],\n        [8,0,1,1,1,0,0,8],\n        [8,0,0,2,0,2,0,8],\n        [8,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [8,8,8,8,8,8,8,8],\n        [8,0,9,9,0,0,0,8],\n        [8,0,0,2,0,2,0,8],\n        [8,0,1,1,0,1,0,8],\n        [8,0,0,0,1,1,1,8],\n        [8,0,0,2,0,2,0,8],\n        [8,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8]\n      ],\n      \"solution\": \"Row=3 구슬들은 왼쪽 2칸, Row=4 구슬들은 오른쪽 2칸 이동 시도. 삼각형(2)·막대(9)·프레임(8)에 막히면 실패.\"\n    },\n    {\n      \"input\": [\n        [8,8,8,8,8,8,8,8,8,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,0,9,9,0,3,0,0,0,8],\n        [8,0,0,0,1,1,0,4,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,0,4,0,1,1,0,0,0,8],\n        [8,0,0,3,0,9,9,0,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,8,8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [8,8,8,8,8,8,8,8,8,8],\n        [8,0,9,9,0,3,0,0,0,8],\n        [8,0,0,0,0,0,0,4,0,8],\n        [8,0,0,0,1,0,0,0,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,0,4,0,0,0,0,0,0,8],\n        [8,0,0,3,1,9,9,0,0,8],\n        [8,0,0,0,0,0,0,0,0,8],\n        [8,8,8,8,8,8,8,8,8,8]\n      ],\n      \"solution\": \"Row=3은 위-오른쪽(대각), Row=6은 아래-왼쪽(대각)으로 이동. 원형(4), 사각형(3), 막대(9), 프레임(8)에 막히면 정지.\"\n    },\n    {\n      \"input\": [\n        [8,8,8,8,8,8,8,8,8,8],\n        [8,0,0,0,9,9,0,0,0,8],\n        [8,0,2,0,0,0,0,3,0,8],\n        [8,0,0,0,0,4,0,0,0,8],\n        [8,0,1,1,1,0,1,1,0,8],\n        [8,0,1,1,1,0,1,1,0,8],\n        [8,0,0,0,4,0,0,0,0,8],\n        [8,0,3,0,0,0,0,2,0,8],\n        [8,0,0,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [8,8,8,8,8,8,8,8,8,8],\n        [8,0,0,0,9,9,0,0,0,8],\n        [8,0,2,0,0,0,0,3,0,8],\n        [8,0,0,0,0,4,0,0,0,8],\n        [8,0,1,1,0,1,1,1,0,8],\n        [8,0,1,1,1,0,1,1,0,8],\n        [8,0,0,0,4,0,0,0,0,8],\n        [8,0,3,0,0,0,0,2,0,8],\n        [8,0,0,0,9,9,0,0,0,8],\n        [8,8,8,8,8,8,8,8,8,8]\n      ],\n      \"solution\": \"Row=4~5 구슬들은 상하좌우 1칸 이동 가능. 삼각형(2), 사각형(3), 원형(4), 막대(9), 프레임(8)에 충돌 시 실패.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "a5b45861-3917-46d6-be7f-4cb01bcb726a.json",
    "uuid": "a5b45861-3917-46d6-be7f-4cb01bcb726a",
    "created": "2025-04-26 15:24:45",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0],\n                [0,1,1,1,0,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,1,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,1,1,1,1,0],\n                [0,0,0,1,0,0,0,1],\n                [0,0,0,1,0,0,0,1],\n                [0,0,0,1,0,0,0,1],\n                [0,0,0,1,1,1,1,0],\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"로직: (r,c)를 (c, 7-r)로 매핑하여 90도 시계 방향 회전\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0],\n                [0,1,1,1,0,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,0,0,1,0,0,0],\n                [0,1,1,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,0,1,1,1,0],\n                [0,0,0,1,0,0,1,0],\n                [0,0,0,1,0,0,1,0],\n                [0,0,0,1,0,0,1,0],\n                [0,0,0,0,1,1,1,0],\n                [0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"로직: (r,c)를 (7-r, 7-c)로 매핑하여 180도 회전\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "b588d5ae-fe50-4b97-89b7-c950478947d3.json",
    "uuid": "b588d5ae-fe50-4b97-89b7-c950478947d3",
    "created": "2025-04-26 16:15:46",
    "description": "{\n    \"task\":[\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,1,1,1,1,1,1,1,1,0],\n                [0,2,2,2,2,2,2,2,1,0],\n                [0,2,3,3,3,3,3,2,1,0],\n                [0,2,3,4,4,4,3,2,1,0],\n                [0,2,3,4,9,4,3,2,1,0],\n                [0,2,3,4,4,4,3,2,1,0],\n                [0,2,3,3,3,3,3,2,1,0],\n                [0,2,2,2,2,2,2,2,5,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,1,1,1,1,1,1,1,1,0],\n                [0,2,2,9,9,2,2,2,1,0],\n                [0,2,3,3,3,3,3,2,1,0],\n                [0,2,3,4,4,4,3,2,1,0],\n                [0,2,3,4,4,4,3,2,1,0],\n                [0,2,3,4,9,4,3,2,1,0],\n                [0,2,3,3,3,3,3,5,1,0],\n                [0,2,2,2,2,2,2,2,5,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"바다생물(1~5)과 소용돌이(9)가 서로 교환되어 위치가 달라지는 착시적 장면\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,1,1,1,1,1,1,1,9,0],\n                [0,1,2,2,2,2,2,1,9,0],\n                [0,1,2,3,3,3,2,1,9,0],\n                [0,1,2,3,4,3,2,1,9,0],\n                [0,1,2,3,3,3,2,1,9,0],\n                [0,1,2,2,2,2,2,1,9,0],\n                [0,1,1,1,5,1,1,1,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,1,9,9,9,9,0],\n                [0,1,1,1,1,1,1,1,9,0],\n                [0,1,2,2,2,2,2,1,9,0],\n                [0,1,2,3,3,3,2,1,9,0],\n                [0,1,2,3,4,3,2,1,9,0],\n                [0,1,2,3,3,3,2,1,9,0],\n                [0,5,5,5,5,2,2,1,9,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"우주정거장(9) 주변 행성(1~5) 교란으로 일부 궤도 객체가 스와핑된 모습\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,1,1,1,1,1,1,1,5,0],\n                [0,1,2,2,2,2,2,1,5,0],\n                [0,1,2,3,3,3,2,1,5,0],\n                [0,1,2,3,4,3,2,1,5,0],\n                [0,1,2,3,9,3,2,1,5,0],\n                [0,1,2,3,4,3,2,1,5,0],\n                [0,1,2,3,3,3,2,1,5,0],\n                [0,1,2,2,2,2,2,1,5,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,5,5,5,5,5,5,5,5,0],\n                [0,1,1,1,2,2,2,1,5,0],\n                [0,1,2,3,3,3,2,1,5,0],\n                [0,1,2,3,4,3,2,1,5,0],\n                [0,1,2,3,9,3,2,1,5,0],\n                [0,1,2,3,4,3,2,1,5,0],\n                [0,1,2,3,3,3,2,1,5,0],\n                [0,1,2,2,2,2,2,1,5,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"마법의 숲에서 요정(3), 버섯(2), 나무(1) 등이 뒤섞여 크리스탈(5) 영역이 확장된 판타지 상황\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,9,1,1,1,1,1,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,2,3,3,2,1,9,0],\n                [0,9,1,2,4,3,2,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,1,1,1,1,5,9,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,2,2,9,9,9,0],\n                [0,9,1,1,1,1,1,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,2,3,3,2,1,9,0],\n                [0,9,1,2,4,3,2,1,9,0],\n                [0,9,1,5,5,5,2,1,9,0],\n                [0,9,1,1,1,1,1,5,9,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"중세 도시의 건물(1), 마차(2), 우물(3), 병사(4)가 성벽(9) 작동으로 재배치된 장면\"\n        },\n        {\n            \"input\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,9,9,9,9,9,0],\n                [0,9,1,1,1,1,1,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,2,3,3,2,1,9,0],\n                [0,9,1,2,4,4,2,1,9,0],\n                [0,9,1,2,3,3,2,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,1,1,5,1,1,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\": [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,9,9,9,5,9,9,9,9,0],\n                [0,9,1,1,1,1,1,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,1,2,4,4,2,1,9,0],\n                [0,9,1,2,3,3,2,1,9,0],\n                [0,9,1,2,4,4,2,1,9,0],\n                [0,9,1,2,2,2,2,1,9,0],\n                [0,9,5,5,5,5,5,5,9,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\": \"과자 왕국의 사탕(1)·롤리팝(2)·젤리곰(3)·마시멜로(4)·결정체(5)가 뒤섞이고 초콜릿벽(9)이 재배열된 판\"\n        }\n    ]\n}"
  },
  {
    "filename": "c2f639b1-9d3b-4e0c-a3f5-201847e80c64.json",
    "uuid": "c2f639b1-9d3b-4e0c-a3f5-201847e80c64",
    "created": "2025-04-26 15:33:56",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "be268295-59e2-48b8-acd9-6a580d2d3df1.json",
    "uuid": "be268295-59e2-48b8-acd9-6a580d2d3df1",
    "created": "2025-04-26 14:12:47",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,0,1,1,1,0,0],\n        [0,0,1,0,0,0,1,0],\n        [0,1,0,4,3,0,0,1],\n        [1,0,4,7,0,6,0,1],\n        [1,0,0,0,0,0,9,1],\n        [0,1,0,0,0,0,1,0],\n        [0,0,1,0,0,1,0,0],\n        [0,0,0,1,1,1,0,0]\n      ],\n      \"output\": [\n        [0,0,0,1,1,1,0,0],\n        [0,0,1,1,1,1,1,0],\n        [0,1,1,4,3,1,1,1],\n        [1,1,4,7,1,6,1,1],\n        [1,1,1,1,1,1,9,1],\n        [0,1,1,1,1,1,1,0],\n        [0,0,1,1,1,1,0,0],\n        [0,0,0,1,1,1,0,0]\n      ],\n      \"solution\": \"1(테두리) 내부의 0을 모두 1로 채우고, 0이 아닌 객체(4,3,6,7,9)는 그대로 유지합니다.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,1,0,0,0,0],\n        [0,0,1,0,1,0,0,0],\n        [0,1,0,0,0,1,0,2],\n        [1,0,0,7,0,0,5,0],\n        [0,1,0,0,0,1,5,0],\n        [0,0,1,0,1,0,0,0],\n        [0,0,0,1,0,0,0,0],\n        [0,0,0,0,0,0,0,8]\n      ],\n      \"output\": [\n        [0,0,0,1,0,0,0,0],\n        [0,0,1,1,1,0,0,0],\n        [0,1,1,1,1,1,0,2],\n        [1,1,1,7,1,1,5,0],\n        [0,1,1,1,1,1,5,0],\n        [0,0,1,1,1,0,0,0],\n        [0,0,0,1,0,0,0,0],\n        [0,0,0,0,0,0,0,8]\n      ],\n      \"solution\": \"다이아몬드 형태의 1 테두리 내부 0을 모두 1로 바꾸고, 0이 아닌 객체(2,5,7,8 등)는 그대로 남깁니다.\"\n    },\n    {\n      \"input\": [\n        [0,1,1,1,1,0,0,0],\n        [1,0,0,0,1,0,9,0],\n        [1,0,4,0,1,0,0,0],\n        [1,0,0,0,1,8,0,0],\n        [1,0,0,7,1,0,0,0],\n        [1,1,1,1,1,0,2,0],\n        [0,0,0,0,0,0,0,0],\n        [0,3,3,3,3,3,3,0]\n      ],\n      \"output\": [\n        [0,1,1,1,1,0,0,0],\n        [1,1,1,1,1,0,9,0],\n        [1,1,4,1,1,0,0,0],\n        [1,1,1,1,1,8,0,0],\n        [1,1,1,7,1,0,0,0],\n        [1,1,1,1,1,0,2,0],\n        [0,0,0,0,0,0,0,0],\n        [0,3,3,3,3,3,3,0]\n      ],\n      \"solution\": \"삼각형+사각형 혼합 테두리(1) 내부의 0을 1로 채웁니다. 0이 아닌 수(4,7,8,9 등)는 유지됩니다.\"\n    },\n    {\n      \"input\": [\n        [0,1,0,0,1,0,0,0],\n        [1,0,1,0,0,1,0,0],\n        [0,1,0,9,0,0,1,0],\n        [0,0,7,0,0,4,0,1],\n        [0,0,4,0,0,7,0,1],\n        [0,1,0,0,0,0,1,0],\n        [1,0,1,0,0,1,0,0],\n        [0,1,0,0,1,0,0,8]\n      ],\n      \"output\": [\n        [0,1,0,0,1,0,0,0],\n        [1,1,1,0,0,1,0,0],\n        [0,1,1,9,1,1,1,0],\n        [0,0,7,1,1,4,1,1],\n        [0,0,4,1,1,7,1,1],\n        [0,1,1,1,1,1,1,0],\n        [1,1,1,0,0,1,0,0],\n        [0,1,0,0,1,0,0,8]\n      ],\n      \"solution\": \"X자 형태 테두리(1) 내부 0을 모두 1로 채워 교차 영역을 메웁니다. 7,9,4,8 등 기존 객체는 변경 없이 유지합니다.\"\n    },\n    {\n      \"input\": [\n        [1,1,1,0,0,0,0,0],\n        [1,0,0,1,0,2,0,0],\n        [1,0,1,0,0,0,0,1],\n        [9,1,0,0,7,0,1,0],\n        [0,1,0,0,1,0,1,0],\n        [0,4,1,0,1,0,8,0],\n        [0,0,0,1,0,1,0,0],\n        [0,0,0,0,1,1,1,0]\n      ],\n      \"output\": [\n        [1,1,1,0,0,0,0,0],\n        [1,1,1,1,0,2,0,0],\n        [1,1,1,1,1,1,1,1],\n        [9,1,1,1,7,1,1,1],\n        [1,1,1,1,1,1,1,1],\n        [0,4,1,1,1,1,8,0],\n        [0,0,0,1,0,1,0,0],\n        [0,0,0,0,1,1,1,0]\n      ],\n      \"solution\": \"복잡하게 구성된 울타리(1) 내부 0을 모두 1로 채웁니다. 2,4,7,8,9 등은 원래의 값을 유지합니다.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "c94d9b83-a22e-4a0d-baf0-1f609c4cd12e.json",
    "uuid": "c94d9b83-a22e-4a0d-baf0-1f609c4cd12e",
    "created": "2025-04-26 15:34:13",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "d9e27cca-fdb6-440a-886a-90ca379a4ecd.json",
    "uuid": "d9e27cca-fdb6-440a-886a-90ca379a4ecd",
    "created": "2025-04-26 16:23:46",
    "description": "{\n  \"task\":[\n    {\n      \"input\":[\n        [0,0,0,0,0,9,9,9,9,9],\n        [0,5,5,0,0,9,9,2,2,9],\n        [0,7,7,7,0,9,9,2,2,9],\n        [0,7,7,7,0,9,9,0,0,9],\n        [0,7,0,7,0,0,0,0,0,9],\n        [0,7,1,7,0,0,8,8,0,9],\n        [0,7,7,7,0,0,8,8,0,9],\n        [0,7,7,7,0,0,0,0,0,9],\n        [0,5,5,0,0,0,0,0,0,9],\n        [0,0,0,0,0,9,9,9,9,9]\n      ],\n      \"output\":[\n        [0,0,0,0,0,9,9,9,9,9],\n        [0,5,5,0,0,9,9,2,2,9],\n        [0,6,6,6,0,9,9,2,2,9],\n        [0,6,5,6,0,9,9,0,0,9],\n        [0,6,0,6,0,0,0,0,0,9],\n        [0,6,1,6,0,0,3,3,0,9],\n        [0,6,6,6,0,0,3,3,0,9],\n        [0,6,5,6,0,0,0,0,0,9],\n        [0,5,5,0,0,0,0,0,0,9],\n        [0,0,0,0,0,9,9,9,9,9]\n      ],\n      \"solution\":\"조각상(7) 일부를 1로 유지. 나머지 7은 외곽=6, 내부=5로 변환. 의자(8)는 3, 배경(0)/바닥(9)/기둥(5)/테이블(2)은 그대로.\"\n    },\n    {\n      \"input\":[\n        [9,9,9,9,9,9,9,9,9,9],\n        [9,3,0,4,4,4,0,3,0,9],\n        [9,0,0,0,7,7,7,0,0,9],\n        [9,0,0,7,7,7,7,7,0,9],\n        [9,0,7,7,7,7,7,7,0,9],\n        [9,0,7,1,7,7,7,7,0,9],\n        [9,8,8,8,7,7,7,0,0,9],\n        [9,8,8,8,7,7,7,0,0,9],\n        [9,3,0,4,4,4,0,3,0,9],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"output\":[\n        [9,9,9,9,9,9,9,9,9,9],\n        [9,3,0,4,4,4,0,3,0,9],\n        [9,0,0,0,6,6,6,0,0,9],\n        [9,0,0,6,6,6,6,6,0,9],\n        [9,0,6,6,6,6,6,6,0,9],\n        [9,0,6,1,6,6,6,6,0,9],\n        [9,2,2,2,5,5,5,0,0,9],\n        [9,2,2,2,5,5,5,0,0,9],\n        [9,3,0,4,4,4,0,3,0,9],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"solution\":\"조각상(7)의 상단=6, 하단=5로 나눠 변환. 8→2, 3/4/9 그대로. 1로 바뀐 칸은 변환 안 됨.\"\n    },\n    {\n      \"input\":[\n        [6,6,6,6,0,0,5,9,0,0],\n        [6,0,0,0,0,0,5,9,0,0],\n        [6,0,7,7,0,0,5,9,0,0],\n        [6,0,7,7,7,0,5,9,0,9],\n        [6,0,7,7,7,7,5,9,9,9],\n        [0,0,7,1,7,7,7,0,9,9],\n        [8,8,8,0,0,7,7,0,9,9],\n        [8,8,8,0,0,7,7,0,9,9],\n        [0,0,0,0,0,9,9,0,9,9],\n        [0,0,0,0,0,9,9,9,9,9]\n      ],\n      \"output\":[\n        [6,6,6,6,0,0,5,9,0,0],\n        [6,0,0,0,0,0,5,9,0,0],\n        [6,0,6,6,0,0,5,9,0,0],\n        [6,0,6,6,6,0,5,9,0,9],\n        [6,0,6,6,6,6,5,9,9,9],\n        [0,0,2,1,2,2,2,0,9,9],\n        [4,4,4,0,0,2,2,0,9,9],\n        [4,4,4,0,0,2,2,0,9,9],\n        [0,0,0,0,0,9,9,0,9,9],\n        [0,0,0,0,0,9,9,9,9,9]\n      ],\n      \"solution\":\"조각상(7)은 상단행=6, 하단행=2로 변환. 좌석(8)→4. 1로 바뀐 칸은 그대로 남음. 계단(6), 기둥(5), 바닥(9) 유지.\"\n    },\n    {\n      \"input\":[\n        [9,9,9,9,9,6,6,6,6,9],\n        [9,0,0,4,4,6,0,0,6,9],\n        [9,8,0,0,0,0,0,0,0,9],\n        [9,7,7,7,0,7,7,7,0,9],\n        [9,7,1,7,0,7,7,7,0,9],\n        [9,7,7,7,0,7,7,7,0,9],\n        [9,0,0,0,0,6,0,0,0,9],\n        [9,8,8,8,0,6,0,0,0,9],\n        [9,4,4,0,0,0,0,0,0,9],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"output\":[\n        [9,9,9,9,9,6,6,6,6,9],\n        [9,0,0,4,4,6,0,0,6,9],\n        [9,5,0,0,0,0,0,0,0,9],\n        [9,6,6,6,0,6,6,6,0,9],\n        [9,6,1,6,0,6,6,6,0,9],\n        [9,6,6,6,0,6,6,6,0,9],\n        [9,0,0,0,0,6,0,0,0,9],\n        [9,5,5,5,0,6,0,0,0,9],\n        [9,4,4,0,0,0,0,0,0,9],\n        [9,9,9,9,9,9,9,9,9,9]\n      ],\n      \"solution\":\"조각상(7) 가장자리는 6, 내부는 4로. 좌석(8)→5. 1로 변경된 칸은 변환 안 됨. 바닥(9)/계단(6)/벽장식(4) 그대로.\"\n    }\n  ]\n}"
  },
  {
    "filename": "c4201d04-7c4a-4532-9d92-fe3ab67274d5.json",
    "uuid": "c4201d04-7c4a-4532-9d92-fe3ab67274d5",
    "created": "2025-04-26 12:02:44",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 2 0 0 0 1\",\n                \"1 0 0 1 5 9 0 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"output\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 0 0 2 0 1\",\n                \"1 0 0 1 0 5 9 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"solution\": \"Objects 2,5,9 move in straight lines and bounce off walls (1) until reaching the final arrangement.\"\n        },\n        {\n            \"input\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 4 2 0 0 0 0 1\",\n                \"1 0 0 1 0 0 0 1\",\n                \"1 0 0 8 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"output\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 4 2 0 0 0 1\",\n                \"1 0 0 1 0 0 0 1\",\n                \"1 0 0 0 8 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"solution\": \"Objects 4,2,8 bounce off the same internal wall and frame edges using the same reflection rule.\"\n        },\n        {\n            \"input\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 0 3 6 0 1\",\n                \"1 0 0 1 7 0 0 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"output\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 0 0 3 6 1\",\n                \"1 0 0 1 0 7 0 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"solution\": \"Objects 3,6,7 start in the upper interior, reflect on wall at (3,3) and edges, and end aligned in the output positions.\"\n        },\n        {\n            \"input\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 9 0 0 0 3 0 1\",\n                \"1 0 0 1 2 0 8 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"output\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 9 0 0 0 3 1\",\n                \"1 0 0 1 0 2 8 1\",\n                \"1 0 0 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"solution\": \"Objects 9,3,2,8 move diagonally or linearly, bouncing off walls, to reach their final positions.\"\n        },\n        {\n            \"input\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 4 0 0 9 1\",\n                \"1 0 6 1 0 0 0 1\",\n                \"1 0 5 0 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"output\": [\n                \"1 1 1 1 1 1 1 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 0 0 0 4 0 9 1\",\n                \"1 0 0 1 6 0 0 1\",\n                \"1 0 0 5 0 0 1 1\",\n                \"1 0 1 0 0 0 0 1\",\n                \"1 0 0 0 0 0 0 1\",\n                \"1 1 1 1 1 1 1 1\"\n            ],\n            \"solution\": \"Objects 4,9,6,5 traverse the grid with reflections on interior walls at (3,3), (4,6), and boundary edges.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "dde79935-5606-4284-a7e0-8e1e0d9f7763.json",
    "uuid": "dde79935-5606-4284-a7e0-8e1e0d9f7763",
    "created": "2025-04-26 12:10:09",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,1,0,0,9,0,8,4,2],\n                [2,0,1,8,0,9,0,0,2],\n                [2,0,4,1,1,8,9,0,2],\n                [2,9,0,8,1,1,4,0,2],\n                [2,0,8,9,0,1,0,1,2],\n                [2,1,4,0,0,0,8,9,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"output\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,0,0,8,0,0,1,4,2],\n                [2,1,0,4,9,0,8,0,2],\n                [2,0,8,1,1,0,4,9,2],\n                [2,0,0,1,1,8,0,0,2],\n                [2,9,4,0,1,0,8,1,2],\n                [2,0,1,0,8,0,9,4,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"solution\": \"9을 6으로 치환하고, 이중나선(1), 작은입자(8), 추가도형(4)이 특정 회전 또는 대칭 규칙으로 재배치된다.\"\n        },\n        {\n            \"input\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,4,1,0,9,9,8,0,2],\n                [2,0,0,1,8,0,0,4,2],\n                [2,9,1,1,0,4,0,8,2],\n                [2,0,8,4,1,1,9,0,2],\n                [2,1,0,9,8,0,0,1,2],\n                [2,0,4,0,1,9,8,1,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"output\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,0,4,8,0,9,1,0,2],\n                [2,8,0,0,4,0,1,0,2],\n                [2,0,1,1,9,0,8,4,2],\n                [2,1,0,0,4,1,0,8,2],\n                [2,0,9,8,0,1,0,0,2],\n                [2,4,1,0,9,8,1,0,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"solution\": \"9을 6으로 치환하며, 배열 내 나선형(1)·작은입자(8)·추가도형(4) 위치가 바뀌는 규칙을 찾아야 한다.\"\n        },\n        {\n            \"input\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,1,8,0,9,4,0,1,2],\n                [2,0,0,9,1,0,4,8,2],\n                [2,9,4,1,8,0,1,0,2],\n                [2,8,1,0,4,0,9,0,2],\n                [2,0,9,4,1,8,0,1,2],\n                [2,4,1,8,0,0,9,0,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"output\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,4,9,0,0,1,8,0,2],\n                [2,1,0,4,0,8,9,0,2],\n                [2,8,0,0,9,4,1,1,2],\n                [2,0,1,8,0,0,0,4,2],\n                [2,9,0,1,4,0,8,0,2],\n                [2,0,0,0,1,9,4,8,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"solution\": \"배열 내 9를 6으로 대체하고, 1(#), 8(@), 4(*)가 일정 축을 기준으로 이동·회전하는 규칙이 적용된다.\"\n        },\n        {\n            \"input\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,9,1,4,8,0,9,1,2],\n                [2,0,0,8,1,4,0,9,2],\n                [2,8,4,0,0,1,9,0,0,2],\n                [2,1,9,0,4,0,8,4,2],\n                [2,4,0,1,0,8,0,1,2],\n                [2,9,0,0,1,4,8,9,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"output\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,0,9,1,0,4,8,0,2],\n                [2,1,0,4,0,0,9,8,2],\n                [2,4,8,9,1,0,0,0,2],\n                [2,0,0,1,8,4,0,9,2],\n                [2,0,4,0,9,1,0,1,2],\n                [2,8,0,0,4,1,9,0,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"solution\": \"9→6 치환을 통해 특수 객체가 다른 기호로 변환되고, 나머지 객체들의 배치는 회전·반사 같은 규칙으로 재배열된다.\"\n        },\n        {\n            \"input\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,1,1,9,8,0,4,4,2],\n                [2,9,0,1,4,8,0,1,2],\n                [2,0,4,8,9,1,0,0,2],\n                [2,8,1,0,1,0,9,4,2],\n                [2,0,9,4,0,8,1,0,2],\n                [2,4,4,8,0,9,0,1,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"output\":[\n                [2,2,2,2,2,2,2,2,2],\n                [2,0,9,1,4,8,1,0,2],\n                [2,1,4,0,8,9,0,4,2],\n                [2,8,0,0,9,4,1,1,2],\n                [2,0,1,8,0,0,0,9,2],\n                [2,4,1,0,0,1,8,0,2],\n                [2,9,8,0,4,0,1,4,2],\n                [2,2,2,2,2,2,2,2,2]\n            ],\n            \"solution\": \"하나의 변수(9→6)만 바뀌지만 다른 객체(1,4,8)의 위치가 복잡하게 변해, 사용자는 그 변환 규칙을 찾아야 한다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "e1d8a5aa-8a04-4979-b7e8-6c623fb10290.json",
    "uuid": "e1d8a5aa-8a04-4979-b7e8-6c623fb10290",
    "created": "2025-04-26 13:59:31",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,2,0,0,0,0],\n        [0,2,0,0,3,0],\n        [0,0,0,0,0,0],\n        [0,0,3,0,0,0],\n        [0,7,0,8,0,0],\n        [0,7,0,8,0,0]\n      ],\n      \"output\": [\n        [0,7,0,8,0,0],\n        [0,7,0,8,3,0],\n        [0,0,3,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"solution\": \"아래 행을 위로 접는 규칙. 겹칠 때 아랫칸이 우선. 7+8=9 규칙은 가능하지만 이 예시에서는 충돌 없이 단순히 덮어씌워 결과가 확정됨.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,2,0,0],\n        [2,0,0,0,0,0],\n        [0,0,7,0,0,0],\n        [0,0,8,0,0,0],\n        [0,2,0,0,5,0],\n        [0,0,0,0,5,0]\n      ],\n      \"output\": [\n        [0,0,0,2,5,0],\n        [2,2,0,0,5,0],\n        [0,0,9,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"solution\": \"접기(아래→위). r5→r0, r4→r1, r3→r2 순으로 합쳐짐. (7,8)이 같은 칸에서 만나 9로 치환되며, 그 외에는 아랫칸이 우선.\"\n    },\n    {\n      \"input\": [\n        [0,4,4,0,0,0],\n        [0,4,0,2,0,0],\n        [0,0,0,0,2,0],\n        [0,0,7,8,0,0],\n        [0,0,7,8,0,0],\n        [5,5,5,0,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,4,4,0,0,0],\n        [5,5,5,2,0,0],\n        [0,0,7,8,2,0],\n        [0,0,7,8,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"solution\": \"행 6→0, 5→1, 4→2, 3→3으로 접힘. 특정 칸(예: r1)에서 (5,4) 충돌 등은 아랫칸이 우선. (7,8) 충돌은 있지만 같은 칸 위치에서 만나지 않아 9는 생성 안 됨.\"\n    },\n    {\n      \"input\": [\n        [4,0,0,0,0,0],\n        [4,4,0,2,0,0],\n        [0,0,7,8,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,8,7,0,0],\n        [4,4,0,2,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [4,0,0,0,0,0],\n        [4,4,0,2,0,0],\n        [0,0,9,9,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0],\n        [0,0,0,0,0,0]\n      ],\n      \"solution\": \"8행×6열에서 r7→r0, r6→r1, r5→r2… 식으로 접힘. (r2, c2=7)와 (r5, c2=8)가 부딪쳐 9, (r2,c3=8)와 (r5,c3=7)도 9가 되어 한 행에 두 개의 9가 생성됨.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "0aaf5e38-33af-43dd-9929-242af264dc59.json",
    "uuid": "0aaf5e38-33af-43dd-9929-242af264dc59",
    "created": "2025-04-26 12:56:56",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [1,0,0,1,0,0,1],\n                [1,1,0,1,0,1,1],\n                [0,1,1,1,1,1,0],\n                [0,0,1,1,1,0,0],\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1]\n            ],\n            \"output\": [\n                [1,0,0,1,0,0,1],\n                [1,1,0,1,0,1,1],\n                [0,1,1,1,1,1,0],\n                [0,0,1,1,1,0,0],\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1]\n            ],\n            \"solution\": \"나비(butterfly) 모양의 7×7 격자. 변환 없이 동일 형태를 사용.\"\n        },\n        {\n            \"input\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,0,0,1,1],\n                [1,0,0,0,0,0,1],\n                [1,0,0,1,0,0,1],\n                [1,0,0,0,0,0,1],\n                [1,1,0,0,0,1,1],\n                [0,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,0,0,1,1],\n                [1,0,0,0,0,0,1],\n                [1,0,0,1,0,0,1],\n                [1,0,0,0,0,0,1],\n                [1,1,0,0,0,1,1],\n                [0,1,1,1,1,1,0]\n            ],\n            \"solution\": \"도넛(donut) 모양의 7×7 격자. 변환 없이 동일 형태를 사용.\"\n        },\n        {\n            \"input\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1],\n                [1,0,1,1,1,0,1],\n                [1,0,1,0,1,0,1],\n                [1,1,0,0,0,1,1],\n                [0,1,1,1,1,1,0]\n            ],\n            \"output\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1],\n                [1,0,1,1,1,0,1],\n                [1,0,1,0,1,0,1],\n                [1,1,0,0,0,1,1],\n                [0,1,1,1,1,1,0]\n            ],\n            \"solution\": \"해골(skull) 모양의 7×7 격자. 변환 없이 동일 형태를 사용.\"\n        },\n        {\n            \"input\": [\n                [0,0,0,1,0,0,0],\n                [0,0,1,1,1,0,0],\n                [0,1,1,1,1,1,0],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [0,0,0,1,0,0,0],\n                [0,0,1,1,1,0,0],\n                [0,1,1,1,1,1,0],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1],\n                [1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"피라미드(pyramid) 모양의 7×7 격자. 변환 없이 동일 형태를 사용.\"\n        },\n        {\n            \"input\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1],\n                [1,0,1,1,1,0,1],\n                [1,0,1,0,1,0,1],\n                [0,1,0,0,0,1,0],\n                [0,0,1,1,1,0,0]\n            ],\n            \"output\": [\n                [0,1,1,1,1,1,0],\n                [1,1,0,1,0,1,1],\n                [1,0,0,1,0,0,1],\n                [1,0,1,1,1,0,1],\n                [1,0,1,0,1,0,1],\n                [0,1,0,0,0,1,0],\n                [0,0,1,1,1,0,0]\n            ],\n            \"solution\": \"늑대/여우 얼굴 모양의 7×7 격자. 변환 없이 동일 형태를 사용.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "2ed49f84-c0e4-4614-b788-13ef4e709a4b.json",
    "uuid": "2ed49f84-c0e4-4614-b788-13ef4e709a4b",
    "created": "2025-04-26 15:43:32",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                [4,0,2,0,8,0,0,0,4,0,2,0],\n                [0,0,0,9,0,0,0,2,0,0,0,0],\n                [0,6,0,0,0,0,0,0,8,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,4],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,2,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,7,0,0,0,0],\n                [0,0,7,0,0,0,0,0,7,0,0,0],\n                [0,7,0,0,0,0,0,0,0,7,0,0],\n                [7,0,0,0,0,7,0,0,0,0,7,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7]\n            ],\n            \"output\":[\n                [4,0,2,0,8,0,0,0,4,0,2,0],\n                [0,0,0,0,0,0,0,2,0,0,0,0],\n                [0,6,0,0,0,0,0,0,8,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,4],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,2,0,0,0,0,0,0,0],\n                [0,0,0,5,0,0,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,7,0,0,0,0],\n                [0,0,7,0,0,0,0,0,7,0,0,0],\n                [0,7,0,0,0,0,0,0,0,7,0,0],\n                [7,0,0,0,0,7,0,0,0,0,7,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7]\n            ],\n            \"solution\":\"구체(9)가 삼각형(7)에 닿으면 5로 변하며, 나머지 객체(2,4,6,8)는 변화 없음.\"\n        },\n        {\n            \"input\":[\n                [0,0,1,0,0,8,0,0,0,0,4,0],\n                [0,9,0,0,0,0,0,0,0,4,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [4,0,0,0,7,0,0,0,0,0,0,9],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,1,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,7,0,0,0,0,7,0,0,0,0],\n                [0,7,0,0,0,0,0,0,7,0,0,0],\n                [7,0,0,0,0,0,0,0,0,7,0,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7],\n                [0,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,1,0,0,8,0,0,0,0,4,0],\n                [0,0,0,0,0,0,0,0,0,4,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [4,0,0,0,7,0,0,0,0,0,0,0],\n                [0,0,0,0,5,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,1,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,7,0,0,0,0,7,0,0,0,0],\n                [0,7,0,0,0,0,0,0,7,0,0,0],\n                [7,0,0,0,0,0,0,0,0,7,0,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7],\n                [0,0,0,0,0,0,0,0,0,0,5,0]\n            ],\n            \"solution\":\"두 구체가 각각 다른 위치의 삼각형과 접촉해 9→5로 변환된다.\"\n        },\n        {\n            \"input\":[\n                [0,4,0,0,0,0,9,0,0,8,0,0],\n                [0,0,0,0,0,0,0,0,6,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,9,0],\n                [0,0,0,6,0,7,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [7,7,7,7,7,0,7,7,7,7,7,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,0,7,0,0,9],\n                [0,0,7,0,0,0,0,0,0,7,0,0],\n                [0,7,0,0,0,2,0,0,0,0,7,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7],\n                [4,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,4,0,0,0,0,0,0,0,8,0,0],\n                [0,0,0,0,0,0,0,0,6,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,6,0,7,0,0,0,0,0,0],\n                [0,0,0,0,0,0,5,0,0,0,0,0],\n                [7,7,7,7,7,0,7,7,7,7,7,5],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,0,7,0,0,0],\n                [0,0,7,0,0,0,0,0,0,7,0,0],\n                [0,7,0,0,0,2,0,0,0,0,7,0],\n                [7,7,7,7,7,7,7,7,7,7,7,7],\n                [4,0,0,0,0,0,0,0,0,0,0,5]\n            ],\n            \"solution\":\"세 구체가 서로 다른 삼각형 위치에 닿아 모두 9→5 변환된다.\"\n        },\n        {\n            \"input\":[\n                [0,0,8,0,0,0,9,0,0,4,0,0],\n                [0,4,0,0,0,0,0,0,0,0,9,0],\n                [0,0,0,0,0,2,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,6,0,0,0,0],\n                [0,0,1,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,7,7,7,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,2,0,0],\n                [7,0,0,0,0,0,0,0,0,0,0,0],\n                [7,7,7,7,7,7,7,7,7,7,7,0],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [4,0,9,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,8,0,0,0,0,0,0,4,0,0],\n                [0,4,0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,2,0,0,0,0,0,0],\n                [0,0,0,7,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,5,6,0,0,0,0],\n                [0,0,1,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,7,7,7,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,2,0,0],\n                [7,0,0,0,0,0,0,0,0,0,0,0],\n                [7,7,7,7,7,7,7,7,7,7,7,5],\n                [0,0,0,0,0,0,0,0,0,0,0,0],\n                [4,0,0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\":\"다수의 구체(9)가 삼각형(7)에 닿으면 모두 5로 변하며, 다른 객체(1,2,4,6,8)는 변화 없음.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "39967ce1-3e3b-44f8-918d-4b088ab87fae.json",
    "uuid": "39967ce1-3e3b-44f8-918d-4b088ab87fae",
    "created": "2025-04-26 14:41:00",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [7,7,4,9,6,0,5,5,2,2],\n                [7,0,0,9,0,6,0,5,2,0],\n                [7,1,1,0,0,0,0,5,2,0],\n                [7,1,1,4,0,0,5,5,0,0],\n                [7,8,9,0,0,7,5,0,6,0],\n                [9,0,0,1,2,7,5,6,0,0],\n                [9,4,0,1,2,7,5,6,0,0],\n                [9,0,3,0,8,0,5,0,0,0],\n                [7,0,0,9,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"output\": [\n                [0,0,4,8,6,0,5,5,2,2],\n                [0,0,0,8,0,6,0,5,2,0],\n                [0,1,1,0,0,0,0,5,2,0],\n                [0,1,1,4,0,0,5,5,0,0],\n                [0,8,8,0,0,0,5,0,6,0],\n                [8,0,0,1,2,0,5,6,0,0],\n                [8,4,0,1,2,0,5,6,0,0],\n                [8,0,3,0,8,0,5,0,0,0],\n                [0,0,0,8,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"solution\": \"Replace all 7 with 0 and all 9 with 8. Keep 0,1,2,3,4,5,6,8 unchanged.\"\n        },\n        {\n            \"input\": [\n                [8,8,7,9,4,0,0,5,5,5],\n                [8,0,7,9,0,6,0,5,0,5],\n                [8,0,7,0,1,2,5,5,0,5],\n                [8,9,7,0,1,2,5,0,0,0],\n                [7,7,7,0,4,4,5,0,6,0],\n                [9,0,3,4,2,7,5,6,0,0],\n                [9,4,0,1,2,7,5,6,0,0],\n                [9,0,3,0,8,0,5,0,0,0],\n                [7,0,0,9,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"output\": [\n                [8,8,0,8,4,0,0,5,5,5],\n                [8,0,0,8,0,6,0,5,0,5],\n                [8,0,0,0,1,2,5,5,0,5],\n                [8,8,0,0,1,2,5,0,0,0],\n                [0,0,0,0,4,4,5,0,6,0],\n                [8,0,3,4,2,0,5,6,0,0],\n                [8,4,0,1,2,0,5,6,0,0],\n                [8,0,3,0,8,0,5,0,0,0],\n                [0,0,0,8,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"solution\": \"Replace all 7 with 0 and all 9 with 8. Keep 0,1,2,3,4,5,6,8 unchanged.\"\n        },\n        {\n            \"input\": [\n                [7,7,7,7,9,6,5,5,1,2],\n                [7,0,9,0,0,6,5,5,1,2],\n                [7,0,9,4,0,0,5,0,0,0],\n                [7,9,0,4,3,0,5,0,0,0],\n                [9,0,0,0,3,2,5,6,6,0],\n                [9,4,0,1,0,2,5,6,6,0],\n                [9,4,4,1,2,2,5,0,0,0],\n                [7,0,0,0,8,0,5,0,0,0],\n                [7,0,0,8,8,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"output\": [\n                [0,0,0,0,8,6,5,5,1,2],\n                [0,0,8,0,0,6,5,5,1,2],\n                [0,0,8,4,0,0,5,0,0,0],\n                [0,8,0,4,3,0,5,0,0,0],\n                [8,0,0,0,3,2,5,6,6,0],\n                [8,4,0,1,0,2,5,6,6,0],\n                [8,4,4,1,2,2,5,0,0,0],\n                [0,0,0,0,8,0,5,0,0,0],\n                [0,0,0,8,8,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"solution\": \"Replace all 7 with 0 and all 9 with 8. Keep 0,1,2,3,4,5,6,8 unchanged.\"\n        },\n        {\n            \"input\": [\n                [8,7,4,4,9,6,6,0,5,5],\n                [0,7,9,0,0,0,5,5,1,1],\n                [0,7,9,3,3,0,5,1,1,0],\n                [7,7,3,3,3,0,5,0,0,0],\n                [9,0,0,0,0,7,5,6,6,0],\n                [8,0,4,1,2,7,5,6,0,0],\n                [8,4,0,1,2,7,5,6,0,0],\n                [9,0,3,0,8,0,5,0,0,0],\n                [7,1,1,9,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"output\": [\n                [8,0,4,4,8,6,6,0,5,5],\n                [0,0,8,0,0,0,5,5,1,1],\n                [0,0,8,3,3,0,5,1,1,0],\n                [0,0,3,3,3,0,5,0,0,0],\n                [8,0,0,0,0,0,5,6,6,0],\n                [8,0,4,1,2,0,5,6,0,0],\n                [8,4,0,1,2,0,5,6,0,0],\n                [8,0,3,0,8,0,5,0,0,0],\n                [0,1,1,8,0,0,5,5,0,0],\n                [5,5,5,5,5,5,5,5,5,5]\n            ],\n            \"solution\": \"Replace all 7 with 0 and all 9 with 8. Keep 0,1,2,3,4,5,6,8 unchanged.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "2c357831-2048-4474-afcc-5c612b5b2d1c.json",
    "uuid": "2c357831-2048-4474-afcc-5c612b5b2d1c",
    "created": "2025-04-26 15:58:30",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,1,1,0,3,3,0,1,1,8],\n                [8,1,9,2,6,6,2,9,1,8],\n                [8,0,2,1,7,7,1,2,0,8],\n                [8,3,6,7,5,5,7,6,3,8],\n                [8,3,6,7,5,5,7,6,3,8],\n                [8,0,2,1,7,7,1,2,0,8],\n                [8,1,9,2,6,6,2,9,1,8],\n                [8,1,1,0,3,3,0,1,1,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"output\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,9,1,0,3,3,0,1,9,8],\n                [8,1,2,2,6,6,2,2,1,8],\n                [8,3,6,1,7,7,1,6,3,8],\n                [8,2,0,7,5,5,7,0,2,8],\n                [8,2,0,7,5,5,7,0,2,8],\n                [8,3,6,1,7,7,1,6,3,8],\n                [8,1,2,2,6,6,2,2,1,8],\n                [8,9,1,0,3,3,0,1,9,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"solution\": \"각 테두리(링)을 시계 방향으로 여러 칸씩 이동하는 규칙을 적용해 내부 숫자들을 재배열한다.\"\n        },\n        {\n            \"input\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,6,6,6,0,0,6,6,6,8],\n                [8,6,1,1,1,4,1,1,1,8],\n                [8,6,1,9,4,4,4,9,1,8],\n                [8,0,4,4,4,2,2,4,4,8],\n                [8,0,4,4,4,2,2,4,4,8],\n                [8,6,1,9,4,4,4,9,1,8],\n                [8,6,1,1,1,4,1,1,1,8],\n                [8,6,6,6,0,0,6,6,6,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"output\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,6,0,0,6,6,0,0,6,8],\n                [8,6,1,9,1,4,1,9,1,8],\n                [8,6,4,1,4,4,4,1,4,8],\n                [8,6,4,4,4,2,2,4,4,8],\n                [8,6,4,4,4,2,2,4,4,8],\n                [8,6,4,1,4,4,4,1,4,8],\n                [8,6,1,9,1,4,1,9,1,8],\n                [8,6,0,0,6,6,0,0,6,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"solution\": \"바깥 고리부터 안쪽으로 이어지는 링마다 시계방향 이동을 수행하며, 0↔6, 1↔4 등 일부 위치 교환이 함께 일어난다.\"\n        },\n        {\n            \"input\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,2,2,2,3,3,3,2,2,8],\n                [8,2,9,0,3,6,3,0,9,8],\n                [8,3,0,7,7,7,7,0,3,8],\n                [8,3,6,7,1,1,7,6,3,8],\n                [8,3,6,7,1,1,7,6,3,8],\n                [8,3,0,7,7,7,7,0,3,8],\n                [8,2,9,0,3,6,3,0,9,8],\n                [8,2,2,2,3,3,3,2,2,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"output\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,9,2,2,3,3,3,2,9,8],\n                [8,2,0,0,6,6,6,0,0,8],\n                [8,3,7,7,7,7,7,7,3,8],\n                [8,3,7,1,1,1,1,7,3,8],\n                [8,3,7,1,1,1,1,7,3,8],\n                [8,3,7,7,7,7,7,7,3,8],\n                [8,2,0,0,6,6,6,0,0,8],\n                [8,9,2,2,3,3,3,2,9,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"solution\": \"내부 고리를 여러 층으로 나눈 뒤, 각 층마다 일정 칸씩 시계 방향으로 회전해 9와 0, 3, 6 등이 재배열되었다.\"\n        },\n        {\n            \"input\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,7,7,5,5,5,5,7,7,8],\n                [8,7,0,1,1,1,1,0,7,8],\n                [8,5,1,9,2,2,9,1,5,8],\n                [8,5,1,2,4,4,2,1,5,8],\n                [8,5,1,2,4,4,2,1,5,8],\n                [8,5,1,9,2,2,9,1,5,8],\n                [8,7,0,1,1,1,1,0,7,8],\n                [8,7,7,5,5,5,5,7,7,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"output\": [\n                [8,8,8,8,8,8,8,8,8,8],\n                [8,7,0,5,5,5,5,0,7,8],\n                [8,7,1,1,1,1,1,1,7,8],\n                [8,5,9,2,2,2,2,9,5,8],\n                [8,5,2,4,4,4,4,2,5,8],\n                [8,5,2,4,4,4,4,2,5,8],\n                [8,5,9,2,2,2,2,9,5,8],\n                [8,7,1,1,1,1,1,1,7,8],\n                [8,7,0,5,5,5,5,0,7,8],\n                [8,8,8,8,8,8,8,8,8,8]\n            ],\n            \"solution\": \"가장자리(8) 고리를 고정하고, 내부 7/5/1/9를 포함한 링들을 시계 방향으로 순환 이동시켜 각 숫자의 위치를 재배치하였다.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "6eb5ffe2-ec2c-4086-890f-b0d0f616267e.json",
    "uuid": "6eb5ffe2-ec2c-4086-890f-b0d0f616267e",
    "created": "2025-04-26 13:22:00",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,4,4,4,4,0,0,0,9],\n        [0,3,0,2,2,0,4,0,0,0],\n        [4,2,0,0,1,0,9,4,0,0],\n        [4,0,6,0,0,2,0,2,4,0],\n        [4,0,0,1,6,1,0,0,4,0],\n        [9,2,0,2,1,0,0,3,4,0],\n        [4,3,1,0,6,0,0,0,4,0],\n        [0,4,2,3,0,2,4,0,0,0],\n        [0,0,4,4,4,4,0,0,0,3],\n        [0,0,9,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,4,4,4,4,0,0,0,9],\n        [0,3,0,8,8,0,4,0,0,0],\n        [4,8,0,0,1,0,9,4,0,0],\n        [4,0,6,0,0,8,0,8,4,0],\n        [4,0,0,1,6,1,0,0,4,0],\n        [9,8,0,8,1,0,0,3,4,0],\n        [4,3,1,0,6,0,0,0,4,0],\n        [0,4,8,3,0,8,4,0,0,0],\n        [0,0,4,4,4,4,0,0,0,3],\n        [0,0,9,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"If a cell with 2 is connected (8-directions) to 1 or 6 and no wall(4) blocks the path, it becomes 8.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,5,5,0,4,0,0,0],\n        [4,2,0,0,9,0,3,4,0,0],\n        [4,0,0,0,0,2,0,2,4,0],\n        [4,0,9,5,0,5,0,0,4,0],\n        [0,2,0,2,0,0,0,3,4,0],\n        [4,3,0,0,5,0,0,0,4,9],\n        [0,4,2,3,0,2,4,0,0,0],\n        [0,0,4,4,4,4,0,0,0,0],\n        [0,0,0,0,9,0,0,0,0,0],\n        [0,0,4,4,4,4,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,5,5,0,4,0,0,0],\n        [4,8,0,0,9,0,3,4,0,0],\n        [4,0,0,0,0,8,0,8,4,0],\n        [4,0,9,5,0,5,0,0,4,0],\n        [0,8,0,8,0,0,0,3,4,0],\n        [4,3,0,0,5,0,0,0,4,9],\n        [0,4,8,3,0,8,4,0,0,0],\n        [0,0,4,4,4,4,0,0,0,0],\n        [0,0,0,0,9,0,0,0,0,0],\n        [0,0,4,4,4,4,0,0,0,0]\n      ],\n      \"solution\": \"All 2-cells connected (8-directions) to 5 or 9 become 8; walls(4) block the path.\"\n    },\n    {\n      \"input\": [\n        [0,0,4,7,4,4,0,0,0,0],\n        [0,0,0,7,0,0,4,0,0,0],\n        [4,2,0,0,1,0,3,4,7,0],\n        [4,0,0,0,0,2,0,2,4,0],\n        [4,0,0,1,7,1,0,0,4,0],\n        [0,2,7,2,1,0,0,3,4,0],\n        [4,3,1,0,7,0,0,0,4,0],\n        [0,4,2,3,0,2,4,0,0,0],\n        [0,0,4,4,4,4,7,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,4,7,4,4,0,0,0,0],\n        [0,0,0,7,0,0,4,0,0,0],\n        [4,8,0,0,1,0,3,4,7,0],\n        [4,0,0,0,0,8,0,8,4,0],\n        [4,0,0,1,7,1,0,0,4,0],\n        [0,8,7,8,1,0,0,3,4,0],\n        [4,3,1,0,7,0,0,0,4,0],\n        [0,4,8,3,0,8,4,0,0,0],\n        [0,0,4,4,4,4,7,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"1 (diamond) or 7 (cloud) converts any reachable 2 to 8 via 8-direction adjacency unless blocked by 4.\"\n    },\n    {\n      \"input\": [\n        [0,0,4,9,4,4,0,0,0,0],\n        [0,0,0,9,0,0,4,0,0,0],\n        [4,2,0,0,1,0,3,4,9,0],\n        [4,0,0,0,0,2,0,2,4,0],\n        [4,0,0,1,9,1,0,0,4,0],\n        [9,2,0,2,1,0,0,3,4,0],\n        [4,3,1,0,9,0,0,0,4,0],\n        [0,4,2,3,0,2,4,0,0,0],\n        [0,0,4,4,4,4,9,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,4,9,4,4,0,0,0,0],\n        [0,0,0,9,0,0,4,0,0,0],\n        [4,8,0,0,1,0,3,4,6,0],\n        [4,0,0,0,0,6,0,8,4,0],\n        [4,0,0,1,9,1,0,0,4,0],\n        [9,6,0,6,1,0,0,3,4,0],\n        [4,3,1,0,9,0,0,0,4,0],\n        [0,4,8,3,0,8,4,0,0,0],\n        [0,0,4,4,4,4,9,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"If 2 is connected to 1, it becomes 8; if only connected to 9, it becomes 6. If both, pick a priority rule (e.g. 1 first). Walls block paths.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "987a82be-4c03-444f-84e2-59c31471e37d.json",
    "uuid": "987a82be-4c03-444f-84e2-59c31471e37d",
    "created": "2025-04-26 14:50:05",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,0,0,0,7,0,7,0,0,4],\n                [4,0,0,7,0,0,0,7,0,4],\n                [4,0,7,0,9,0,6,0,7,4],\n                [4,0,0,7,0,6,0,7,0,4],\n                [4,0,0,0,6,0,0,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"output\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,0,0,0,7,0,7,0,0,4],\n                [4,0,0,7,0,0,0,7,0,4],\n                [4,0,7,0,8,0,5,0,7,4],\n                [4,0,0,7,0,5,0,7,0,4],\n                [4,0,0,0,5,0,0,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"solution\": \"9→8, 6→5, 삼각형 7 유지하며 가운데 구체들이 변환됨.\"\n        },\n        {\n            \"input\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,0,7,0,0,0,0,0,4],\n                [4,0,7,0,6,0,0,0,0,4],\n                [4,7,0,0,0,9,0,0,0,4],\n                [4,0,7,0,9,0,0,0,0,4],\n                [4,0,0,7,0,0,0,6,0,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,0,0,0,7,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"output\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,0,7,0,0,0,0,0,4],\n                [4,0,7,0,0,0,0,0,0,4],\n                [4,7,0,0,0,8,0,0,0,4],\n                [4,0,7,0,8,0,0,0,0,4],\n                [4,0,0,7,0,0,0,5,0,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,0,0,0,7,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"solution\": \"사선상의 9→8 변환, 6→5 변환, 일부 7는 경계로 유지.\"\n        },\n        {\n            \"input\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,7,7,0,0,0,0,9,0,4],\n                [4,7,0,7,0,0,9,0,0,4],\n                [4,7,0,0,7,0,0,9,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,6,0,6,0,0,0,0,0,4],\n                [4,6,6,0,0,0,9,0,0,4],\n                [4,6,0,6,0,0,0,0,0,4],\n                [4,0,6,0,0,9,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"output\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,7,7,0,0,0,0,8,0,4],\n                [4,7,0,7,0,0,8,0,0,4],\n                [4,7,0,0,7,0,0,8,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,5,0,5,0,0,0,0,0,4],\n                [4,5,5,0,0,0,8,0,0,4],\n                [4,5,0,5,0,0,0,0,0,4],\n                [4,0,5,0,0,8,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"solution\": \"9→8, 6→5, 7은 삼각형 모양 그대로 유지.\"\n        },\n        {\n            \"input\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,6,0,0,0,0,6,0,4],\n                [4,0,0,9,0,9,0,0,0,4],\n                [4,7,0,0,9,0,0,0,7,4],\n                [4,7,0,0,9,0,0,0,7,4],\n                [4,0,0,9,0,9,0,0,0,4],\n                [4,0,6,0,0,0,0,6,0,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"output\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,0,5,0,0,0,0,5,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,7,0,0,8,0,0,0,7,4],\n                [4,7,0,0,8,0,0,0,7,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,0,5,0,0,0,0,5,0,4],\n                [4,0,0,0,7,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"solution\": \"중앙 9→8, 6→5, 대칭구조 유지.\"\n        },\n        {\n            \"input\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,2,0,3,0,0,0,9,0,4],\n                [4,0,2,5,0,0,7,0,0,4],\n                [4,0,0,5,9,0,0,7,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,7,0,0,0,0,5,0,0,4],\n                [4,0,9,0,5,0,0,2,0,4],\n                [4,0,3,0,0,0,2,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"output\": [\n                [4,4,4,4,4,4,4,4,4,4],\n                [4,6,0,6,0,0,0,8,0,4],\n                [4,0,6,6,0,0,7,0,0,4],\n                [4,0,0,6,8,0,0,7,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,7,0,0,0,0,6,0,0,4],\n                [4,0,8,0,6,0,0,6,0,4],\n                [4,0,6,0,0,0,6,0,0,4],\n                [4,0,0,0,0,0,0,0,0,4],\n                [4,4,4,4,4,4,4,4,4,4]\n            ],\n            \"solution\": \"2+3→6, 9→8, 5→6, 7은 고정.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "e2a32f81-b1e8-47b5-9362-4f6bb21650c6.json",
    "uuid": "e2a32f81-b1e8-47b5-9362-4f6bb21650c6",
    "created": "2025-04-26 12:17:43",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,7,0,9,0,0,8,0,1],\n                [1,0,6,0,0,0,0,0,1],\n                [1,0,2,0,6,0,0,0,1],\n                [1,0,0,0,3,0,0,9,1],\n                [1,0,0,0,0,6,0,0,1],\n                [1,8,0,0,0,0,0,0,1],\n                [1,0,0,5,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,6,0,0,0,0,7,1],\n                [1,0,0,0,9,0,0,0,1],\n                [1,0,2,0,0,0,0,0,1],\n                [1,0,0,0,3,0,0,0,1],\n                [1,0,0,5,0,6,0,9,1],\n                [1,8,0,0,0,0,0,0,1],\n                [1,0,0,0,0,0,8,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"구(R, G, P)이 벽(1), 내부 구조물(6), 특수 구조물(9)과 충돌·반사하며 최종 위치에 도달. 7은 특수 상호작용을 유발해 Input이 Output 상태로 변화.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,7,0,0,0,6,9,0,1],\n                [1,0,0,4,0,0,0,0,1],\n                [1,0,0,0,0,9,0,0,1],\n                [1,0,8,0,0,0,0,0,1],\n                [1,0,0,0,0,0,5,0,1],\n                [1,0,6,0,0,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,6,0,0,0,0,7,1],\n                [1,0,0,0,9,0,0,0,1],\n                [1,0,0,4,0,0,0,0,1],\n                [1,0,0,0,0,0,5,0,1],\n                [1,0,0,0,0,6,0,0,1],\n                [1,0,9,0,0,0,0,8,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"B(4), Y(5), P(8)가 벽(1), 구조물(6,9)에 부딪히면서 위치가 바뀜. 7은 특정 시점에 객체 상호작용을 일으켜 최종 Output 상태가 됨.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,7,9,0,0,0,9,0,1],\n                [1,0,0,6,0,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,2,0,6,0,3,0,1],\n                [1,0,0,0,0,6,0,8,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,9,0,0,0,0,7,1],\n                [1,0,0,0,6,0,0,0,1],\n                [1,0,2,0,0,0,0,0,1],\n                [1,0,0,0,6,0,8,0,1],\n                [1,0,0,0,0,3,0,9,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,0,0,0,0,0,6,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"R,G,P 등이 여러 X(9) 구조물과 6에 순차 충돌하며 이동. 7과의 특수 상호작용 후 최종 배치가 결정됨.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,7,9,8,9,0,0,0,1],\n                [1,0,6,6,0,0,0,0,1],\n                [1,0,0,0,0,6,0,0,1],\n                [1,0,0,0,0,6,0,0,1],\n                [1,0,5,0,0,0,6,0,1],\n                [1,0,0,4,0,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,6,0,9,0,0,7,1],\n                [1,0,0,6,0,0,0,0,1],\n                [1,0,0,0,0,6,0,8,1],\n                [1,0,4,0,0,0,0,0,1],\n                [1,0,0,0,5,6,0,0,1],\n                [1,0,0,0,9,0,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"B,Y,P가 내부 구조물(6)과 X(9) 여러 개에 부딪히며 이동. 7과의 충돌·반사 규칙도 적용돼 최종 배치.\"\n        },\n        {\n            \"input\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,7,0,9,0,0,0,8,1],\n                [1,0,6,0,0,9,0,0,1],\n                [1,0,0,0,0,6,0,3,1],\n                [1,0,5,6,0,9,0,0,1],\n                [1,0,0,0,4,0,0,0,1],\n                [1,0,2,0,0,6,0,0,1],\n                [1,0,0,0,0,0,0,0,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"output\": [\n                [1,1,1,1,1,1,1,1,1],\n                [1,0,6,0,0,0,0,7,1],\n                [1,0,9,0,0,0,0,0,1],\n                [1,0,5,0,6,0,0,0,1],\n                [1,0,0,0,0,0,4,0,1],\n                [1,0,2,0,0,9,0,0,1],\n                [1,0,0,0,0,6,0,8,1],\n                [1,0,0,3,0,0,0,9,1],\n                [1,1,1,1,1,1,1,1,1]\n            ],\n            \"solution\": \"다수의 9(X)와 6에 의해 경로가 제한·변경되며 R,G,Y,P가 이동. 7이 특정 타이밍에 위치 변환을 유도해 최종 Output으로 이어짐.\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "566ca790-0470-4c12-9347-f5631d932db9.json",
    "uuid": "566ca790-0470-4c12-9347-f5631d932db9",
    "created": "2025-04-26 11:44:56",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                [0,2,2,3,4,3,2,2,0],\n                [2,6,1,1,1,1,1,6,2],\n                [2,1,5,5,8,5,5,1,2],\n                [3,1,5,1,0,1,5,1,3],\n                [4,1,8,0,9,0,8,1,4],\n                [3,1,5,1,0,1,5,1,3],\n                [2,1,5,5,8,5,5,1,2],\n                [2,6,1,1,1,1,1,6,2],\n                [0,2,2,3,4,3,2,2,0]\n            ],\n            \"output\":[\n                [0,2,2,3,6,3,2,2,0],\n                [2,6,1,1,3,1,1,6,2],\n                [2,1,5,5,9,5,5,1,2],\n                [3,1,5,1,2,1,5,1,3],\n                [6,3,9,2,9,2,9,3,6],\n                [3,1,5,1,2,1,5,1,3],\n                [2,1,5,5,9,5,5,1,2],\n                [2,6,1,1,3,1,1,6,2],\n                [0,2,2,3,6,3,2,2,0]\n            ],\n            \"solution\":\"Central (9) → same row & column +2 (clamped to 9)\"\n        },\n        {\n            \"input\":[\n                [7,2,2,0,1,0,2,2,7],\n                [2,3,3,1,6,1,3,3,2],\n                [2,3,4,1,0,1,4,3,2],\n                [0,1,1,1,1,1,1,1,0],\n                [1,6,0,1,9,1,0,6,1],\n                [0,1,1,1,1,1,1,1,0],\n                [2,3,4,1,0,1,4,3,2],\n                [2,3,3,1,6,1,3,3,2],\n                [7,2,2,0,1,0,2,2,7]\n            ],\n            \"output\":[\n                [7,2,2,0,4,0,2,2,7],\n                [2,3,3,1,9,1,3,3,2],\n                [2,3,4,1,3,1,4,3,2],\n                [0,1,1,1,4,1,1,1,0],\n                [4,9,3,4,9,4,3,9,4],\n                [0,1,1,1,4,1,1,1,0],\n                [2,3,4,1,3,1,4,3,2],\n                [2,3,3,1,9,1,3,3,2],\n                [7,2,2,0,4,0,2,2,7]\n            ],\n            \"solution\":\"Central (9) → same row & column +3 (clamped to 9)\"\n        },\n        {\n            \"input\":[\n                [0,0,2,2,2,2,2,0,0],\n                [0,2,2,1,1,1,2,2,0],\n                [2,2,1,1,0,1,1,2,2],\n                [2,1,1,1,1,1,1,1,2],\n                [2,1,0,1,9,1,0,1,2],\n                [2,1,1,1,1,1,1,1,2],\n                [2,2,1,1,0,1,1,2,2],\n                [0,2,2,1,1,1,2,2,0],\n                [0,0,2,2,2,2,2,0,0]\n            ],\n            \"output\":[\n                [0,0,2,2,4,2,2,0,0],\n                [0,2,2,1,3,1,2,2,0],\n                [2,2,1,1,2,1,1,2,2],\n                [2,1,1,1,3,1,1,1,2],\n                [4,3,2,3,9,3,2,3,4],\n                [2,1,1,1,3,1,1,1,2],\n                [2,2,1,1,2,1,1,2,2],\n                [0,2,2,1,3,1,2,2,0],\n                [0,0,2,2,4,2,2,0,0]\n            ],\n            \"solution\":\"Central (9) → same row & column +2 (clamped to 9)\"\n        },\n        {\n            \"input\":[\n                [5,5,0,0,2,0,0,5,5],\n                [0,1,1,2,2,2,1,1,0],\n                [2,1,4,1,1,1,4,1,2],\n                [0,2,1,8,1,8,1,2,0],\n                [0,2,1,1,9,1,1,2,0],\n                [0,2,1,8,1,8,1,2,0],\n                [2,1,4,1,1,1,4,1,2],\n                [0,1,1,2,2,2,1,1,0],\n                [5,5,0,0,2,0,0,5,5]\n            ],\n            \"output\":[\n                [5,5,0,0,3,0,0,5,5],\n                [0,1,1,2,3,2,1,1,0],\n                [2,1,4,1,2,1,4,1,2],\n                [0,2,1,8,2,8,1,2,0],\n                [1,3,2,2,9,2,2,3,1],\n                [0,2,1,8,2,8,1,2,0],\n                [2,1,4,1,2,1,4,1,2],\n                [0,1,1,2,3,2,1,1,0],\n                [5,5,0,0,3,0,0,5,5]\n            ],\n            \"solution\":\"Central (9) → same row & column +1 (clamped to 9)\"\n        },\n        {\n            \"input\":[\n                [3,3,3,0,1,0,3,3,3],\n                [3,6,2,1,2,1,2,6,3],\n                [3,2,5,2,0,2,5,2,3],\n                [0,1,2,2,2,2,2,1,0],\n                [1,2,0,2,9,2,0,2,1],\n                [0,1,2,2,2,2,2,1,0],\n                [3,2,5,2,0,2,5,2,3],\n                [3,6,2,1,2,1,2,6,3],\n                [3,3,3,0,1,0,3,3,3]\n            ],\n            \"output\":[\n                [3,3,3,0,3,0,3,3,3],\n                [3,6,2,1,4,1,2,6,3],\n                [3,2,5,2,2,2,5,2,3],\n                [0,1,2,2,4,2,2,1,0],\n                [3,4,2,4,9,4,2,4,3],\n                [0,1,2,2,4,2,2,1,0],\n                [3,2,5,2,2,2,5,2,3],\n                [3,6,2,1,4,1,2,6,3],\n                [3,3,3,0,3,0,3,3,3]\n            ],\n            \"solution\":\"Central (9) → same row & column +2 (clamped to 9)\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "a09628d9-be17-48cd-87de-9af74eccdc9a.json",
    "uuid": "a09628d9-be17-48cd-87de-9af74eccdc9a",
    "created": "2025-04-26 11:54:02",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [1,1,1,1,1,1,1],\n        [1,2,2,2,2,2,1],\n        [1,4,2,5,2,2,1],\n        [1,2,2,2,2,7,1],\n        [1,2,9,3,2,2,1],\n        [1,2,2,2,8,2,1],\n        [1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,1,1,1,1,1],\n        [1,2,2,2,2,2,1],\n        [1,4,2,2,5,2,1],\n        [1,2,2,9,3,7,1],\n        [1,2,2,2,2,2,1],\n        [1,2,2,2,8,2,1],\n        [1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"금속 구(9)와 반사광(3)이 (4행,3~4열)→(3행,4~5열)로 대각선 이동하여 이전 자리는 2로 복원\"\n    },\n    {\n      \"input\": [\n        [1,1,1,1,1,1,1,1],\n        [1,2,2,2,5,2,2,1],\n        [1,2,6,2,2,2,4,1],\n        [1,2,2,2,2,2,2,1],\n        [1,2,2,2,9,3,2,1],\n        [1,2,2,2,9,2,2,1],\n        [1,2,2,8,2,2,2,1],\n        [1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,1,1,1,1,1,1],\n        [1,2,2,2,5,2,2,1],\n        [1,2,6,2,2,2,2,1],\n        [1,2,2,2,9,3,2,1],\n        [1,2,2,2,9,2,2,1],\n        [1,2,2,8,2,2,2,1],\n        [1,2,2,2,2,2,4,1],\n        [1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"구(9)와 반사광(3)이 (4행,4~5열)→(3행,5~6열)로 한 칸 대각이동, 나머지 객체는 고정\"\n    },\n    {\n      \"input\": [\n        [1,1,1,1,1,1,1,1,1],\n        [1,2,5,2,7,2,5,2,1],\n        [1,2,2,2,2,2,2,2,1],\n        [1,2,5,2,5,2,2,2,1],\n        [1,2,9,9,3,2,2,2,1],\n        [1,2,2,5,2,2,2,2,1],\n        [1,2,2,2,8,2,2,2,1],\n        [1,2,2,2,2,2,7,2,1],\n        [1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,1,1,1,1,1,1,1],\n        [1,2,5,2,7,2,5,2,1],\n        [1,2,2,2,2,2,2,2,1],\n        [1,2,5,9,9,3,2,2,1],\n        [1,2,2,2,2,2,2,2,1],\n        [1,2,2,5,2,2,2,2,1],\n        [1,2,2,2,8,2,2,2,1],\n        [1,2,2,2,2,2,7,2,1],\n        [1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"2×1 크기의 구(9)와 반사광(3)가 (4행,2~4열)→(3행,3~5열)로 이동, 이동 후 자리는 2로 돌아감\"\n    },\n    {\n      \"input\": [\n        [1,1,1,1,1,1,1,1,1],\n        [1,2,2,4,2,2,2,2,1],\n        [1,2,4,2,2,6,2,2,1],\n        [1,2,6,2,2,2,2,2,1],\n        [1,2,9,9,3,2,2,2,1],\n        [1,2,9,9,2,2,2,6,1],\n        [1,2,2,2,4,2,2,2,1],\n        [1,2,2,2,2,2,2,2,1],\n        [1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,1,1,1,1,1,1,1],\n        [1,2,2,4,2,2,2,2,1],\n        [1,2,4,2,2,6,2,2,1],\n        [1,2,9,9,3,2,2,2,1],\n        [1,2,9,9,2,2,2,2,1],\n        [1,2,2,2,2,2,2,6,1],\n        [1,2,2,2,4,2,2,2,1],\n        [1,2,2,2,2,2,2,2,1],\n        [1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"구(9×2)와 반사광(3)이 대각선(위쪽/오른쪽) 1칸 이동, 삼각형(6)·다이아(4)는 고정\"\n    },\n    {\n      \"input\": [\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,2,8,8,2,5,2,2,2,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,2,6,2,4,2,2,2,2,1],\n        [1,2,9,9,3,2,2,5,2,1],\n        [1,2,9,9,2,2,2,2,2,1],\n        [1,2,2,2,2,8,8,2,2,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,2,8,8,2,5,2,2,2,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,2,6,2,4,2,2,2,2,1],\n        [1,2,2,9,9,3,2,5,2,1],\n        [1,2,2,9,9,2,2,2,2,1],\n        [1,2,2,2,2,8,8,2,2,1],\n        [1,2,2,2,2,2,2,2,2,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"밑쪽 구(9×2)와 반사광(3)가 우상향으로 한 칸 이동, 다른 객체(◯, ◼, ▲, ◈)는 이동 없음\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "e8ce05f4-b119-4101-9f4b-4834d9b7d092.json",
    "uuid": "e8ce05f4-b119-4101-9f4b-4834d9b7d092",
    "created": "2025-04-26 12:25:54",
    "description": "```json\n{\n    \"task\":[\n        {\n            \"input\":[\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,1,1,1,0,0,3,0,0],\n                [0,0,1,0,1,0,3,3,0,0],\n                [0,2,2,2,0,0,3,0,0,4],\n                [0,2,0,2,0,0,0,0,4,4],\n                [0,2,2,2,0,0,0,0,0,4],\n                [0,0,0,0,0,4,4,4,0,0],\n                [0,0,3,0,0,4,0,4,0,0],\n                [0,0,3,3,0,4,4,4,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,2,2,2],\n                [0,0,0,1,1,1,0,2,0,2],\n                [0,0,0,0,0,1,1,2,0,2],\n                [0,0,0,0,0,1,3,2,0,0],\n                [0,0,3,3,0,1,0,0,0,0],\n                [0,0,3,0,4,4,4,0,0,0],\n                [0,0,3,0,4,0,4,3,0,0],\n                [0,0,0,0,4,4,4,3,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\":\"Rotate the grid 90 degrees around (4,4).\"\n        },\n        {\n            \"input\":[\n                [0,0,0,4,4,4,0,0,0,0],\n                [0,1,0,4,0,4,0,0,3,0],\n                [0,1,0,4,0,4,0,0,3,0],\n                [0,1,1,1,0,4,3,3,3,0],\n                [0,0,0,0,0,0,0,3,0,0],\n                [2,2,2,2,0,0,0,3,0,0],\n                [2,0,0,2,0,3,0,3,3,0],\n                [2,2,2,2,0,3,3,3,3,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,1,1,1,0],\n                [0,0,0,2,2,2,1,0,1,0],\n                [0,0,0,2,0,2,1,0,1,0],\n                [0,0,0,2,0,2,4,4,4,0],\n                [0,0,3,3,3,0,4,0,4,0],\n                [0,0,3,0,3,0,4,0,4,0],\n                [0,0,0,0,3,0,4,0,0,0],\n                [0,0,0,0,3,3,3,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\":\"Rotate the grid 90 degrees around (4,4).\"\n        },\n        {\n            \"input\":[\n                [0,0,0,0,0,0,4,4,4,0],\n                [0,0,3,3,0,0,4,0,4,0],\n                [0,0,3,0,3,0,4,0,4,0],\n                [0,0,3,0,3,0,0,0,0,0],\n                [0,0,0,0,1,1,1,1,0,0],\n                [2,2,0,0,1,0,0,1,0,0],\n                [2,0,0,0,1,1,1,1,0,0],\n                [2,2,2,2,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,2,2,0,0,0,0,0],\n                [0,0,0,2,0,0,3,3,3,0],\n                [0,0,0,2,0,0,3,0,3,0],\n                [0,0,1,1,1,1,3,0,3,0],\n                [0,0,1,0,0,1,0,0,0,0],\n                [0,0,4,4,4,1,0,1,0,0],\n                [0,0,4,0,4,1,1,1,0,0],\n                [0,0,4,4,4,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\":\"Rotate the grid 90 degrees around (4,4).\"\n        },\n        {\n            \"input\":[\n                [0,0,4,4,4,0,0,0,0,0],\n                [0,0,4,0,4,0,3,3,0,0],\n                [0,0,4,0,4,0,3,0,3,0],\n                [0,1,1,1,1,1,3,0,3,0],\n                [0,1,0,0,0,1,0,0,0,0],\n                [0,1,2,2,2,1,0,0,0,0],\n                [0,1,2,0,2,1,0,0,0,0],\n                [0,1,2,2,2,1,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"output\":[\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,1,1,1,1,1,0,0,0,0],\n                [0,1,2,2,2,1,4,4,4,0],\n                [0,1,2,0,2,1,4,0,4,0],\n                [0,1,2,2,2,1,4,0,4,0],\n                [0,1,1,1,1,1,0,0,0,0],\n                [0,3,0,3,3,0,0,0,0,0],\n                [0,3,3,0,3,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ],\n            \"solution\":\"Rotate the grid 90 degrees around (4,4).\"\n        }\n    ]\n}\n```"
  },
  {
    "filename": "f567fadd-489a-49e0-8282-070ad4b2fe09.json",
    "uuid": "f567fadd-489a-49e0-8282-070ad4b2fe09",
    "created": "2025-04-26 14:22:26",
    "description": "```json\n{\n    \"task\": [\n        {\n            \"input\": [\n                [0, 1, 1, 5, 0, 4, 7, 0],\n                [0, 2, 1, 0, 4, 7, 6, 0],\n                [0, 2, 1, 6, 0, 4, 5, 0],\n                [0, 2, 1, 3, 9, 1, 6, 0],\n                [5, 4, 4, 3, 0, 1, 7, 0],\n                [0, 0, 0, 4, 2, 2, 6, 0],\n                [0, 5, 6, 0, 7, 0, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [0, 1, 1, 5, 0, 4, 7, 0],\n                [0, 2, 1, 0, 6, 7, 6, 0],\n                [0, 2, 1, 6, 0, 6, 5, 0],\n                [0, 2, 8, 7, 9, 8, 6, 0],\n                [5, 4, 4, 7, 0, 8, 7, 0],\n                [0, 0, 0, 4, 5, 2, 6, 0],\n                [0, 5, 6, 0, 7, 0, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"화산(9)과 맨해튼 거리 ≤2 범위에서 1→8, 2→5, 3→7, 4→6 변형한다. 기타(0,5,6,7,9)는 그대로 유지한다.\"\n        },\n        {\n            \"input\": [\n                [0, 4, 0, 5, 1, 6, 1, 0],\n                [0, 1, 4, 0, 2, 0, 2, 0],\n                [0, 0, 9, 1, 4, 3, 1, 0],\n                [0, 7, 1, 1, 2, 1, 0, 0],\n                [2, 2, 3, 4, 0, 5, 6, 0],\n                [0, 6, 5, 1, 0, 0, 0, 0],\n                [0, 0, 0, 1, 6, 7, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [0, 4, 0, 5, 1, 6, 1, 0],\n                [0, 8, 6, 0, 2, 0, 2, 0],\n                [0, 0, 9, 8, 6, 3, 1, 0],\n                [0, 7, 8, 8, 2, 1, 0, 0],\n                [2, 2, 7, 4, 0, 5, 6, 0],\n                [0, 6, 5, 1, 0, 0, 0, 0],\n                [0, 0, 0, 1, 6, 7, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"화산(9)을 중심으로 맨해튼 거리 ≤2 이내에 있는 구름(1), 야자수(2), 물(3), 바위(4)만 각각 8,5,7,6으로 변한다.\"\n        },\n        {\n            \"input\": [\n                [4, 6, 0, 1, 2, 5, 0],\n                [0, 7, 1, 0, 4, 1, 0],\n                [5, 1, 3, 2, 1, 0, 0],\n                [4, 4, 1, 9, 1, 2, 0],\n                [7, 0, 4, 2, 1, 1, 0],\n                [6, 2, 1, 1, 3, 6, 0],\n                [0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [4, 6, 0, 1, 2, 5, 0],\n                [0, 7, 1, 0, 4, 1, 0],\n                [5, 1, 7, 5, 1, 0, 0],\n                [4, 4, 8, 9, 8, 2, 0],\n                [7, 0, 6, 5, 8, 1, 0],\n                [6, 2, 1, 8, 3, 6, 0],\n                [0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"화산(9)이 (3,3)에 있으므로 주변 거리 2칸 이내의 1→8, 2→5, 3→7, 4→6으로 변화하며, 나머지는 그대로다.\"\n        },\n        {\n            \"input\": [\n                [1, 4, 0, 5, 0, 3, 1, 9],\n                [0, 0, 1, 0, 4, 6, 1, 5],\n                [5, 1, 2, 0, 0, 4, 0, 1],\n                [6, 2, 2, 4, 1, 0, 7, 1],\n                [0, 0, 3, 1, 4, 1, 6, 0],\n                [0, 7, 1, 2, 4, 1, 6, 0],\n                [0, 0, 0, 1, 6, 7, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"output\": [\n                [1, 4, 0, 5, 0, 7, 8, 9],\n                [0, 0, 1, 0, 4, 6, 8, 5],\n                [5, 1, 2, 0, 0, 4, 0, 1],\n                [6, 2, 2, 4, 1, 0, 7, 1],\n                [0, 0, 3, 1, 4, 1, 6, 0],\n                [0, 7, 1, 2, 4, 1, 6, 0],\n                [0, 0, 0, 1, 6, 7, 1, 0],\n                [0, 0, 0, 0, 0, 0, 0, 0]\n            ],\n            \"solution\": \"화산(9)이 (0,7) 위치. 맨해튼 거리 2 이하 셀의 1→8, 2→5, 3→7, 4→6 변환. (단, 멀리 있는 객체는 그대로).\"\n        },\n        {\n            \"input\": [\n                [1, 5, 7, 0, 4, 4, 1, 0],\n                [0, 2, 2, 1, 6, 0, 5, 0],\n                [0, 2, 1, 1, 4, 1, 0, 0],\n                [0, 5, 1, 4, 3, 1, 0, 0],\n                [4, 0, 0, 2, 1, 2, 6, 0],\n                [9, 4, 1, 1, 2, 0, 7, 0]\n            ],\n            \"output\": [\n                [1, 5, 7, 0, 4, 4, 1, 0],\n                [0, 2, 2, 1, 6, 0, 5, 0],\n                [0, 2, 1, 1, 4, 1, 0, 0],\n                [0, 5, 1, 4, 3, 1, 0, 0],\n                [6, 0, 0, 2, 1, 2, 6, 0],\n                [9, 6, 1, 1, 2, 0, 7, 0]\n            ],\n            \"solution\": \"화산(9)이 (5,0)에 있어 거리 2 이내의 바위(4)→6, 구름(1)→8, 야자수(2)→5, 물(3)→7. 그런데 실제 (4,x) 행 일부 바위만 거리에 포함되어 (4→6)으로 바뀌었다.\"\n        }\n    ]\n}\n```"
  }
]