[
  {
    "filename": "38a9df52-c284-40cd-b1ca-4526da0adc02.json",
    "uuid": "38a9df52-c284-40cd-b1ca-4526da0adc02",
    "created": "2025-04-26 20:31:05",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0],\n        [0,1,1,1,0,5,5,0],\n        [0,1,1,1,0,5,0,5],\n        [0,0,1,0,2,0,5,0],\n        [0,0,2,2,2,2,0,0],\n        [0,0,2,2,2,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,0,0,0,0],\n        [0,4,4,4,0,4,4,0],\n        [0,4,4,4,0,4,0,4],\n        [0,0,4,0,4,0,4,0],\n        [0,0,4,4,4,4,0,0],\n        [0,0,4,4,4,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"원형(O=1)·정사각(#=2)·삼각(^=5) → 은하(G=4)로 치환, 배경(0)·흰입자(3) 유지\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0],\n        [0,1,1,1,0,5,5,0],\n        [0,1,1,1,0,5,0,5],\n        [0,0,1,0,2,0,5,0],\n        [0,0,2,2,2,2,0,0],\n        [0,0,2,2,2,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,0,0,0,0],\n        [0,4,4,4,0,4,4,0],\n        [0,4,4,4,0,4,0,4],\n        [0,0,4,0,4,0,4,0],\n        [0,0,4,4,4,4,0,0],\n        [0,0,4,4,4,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"다이아몬드(D=1)·원형(O=2)·별(S=5) → 은하(G=4)로 치환, 배경(0)·흰입자(3) 유지\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0],\n        [0,1,1,1,0,0,5,5],\n        [0,1,1,1,0,0,5,0],\n        [0,0,1,0,2,0,5,0],\n        [0,0,2,2,2,2,0,0],\n        [0,0,2,2,2,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,0,0,0,0],\n        [0,4,4,4,0,0,4,4],\n        [0,4,4,4,0,0,4,0],\n        [0,0,4,0,4,0,4,0],\n        [0,0,4,4,4,4,0,0],\n        [0,0,4,4,4,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"+(플러스=1)·정사각(#=2)·다이아몬드(D=5) → 은하(G=4)로 치환, 배경(0)·흰입자(3) 유지\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0],\n        [0,1,1,1,0,2,2,0],\n        [0,1,1,1,0,2,0,2],\n        [0,0,1,0,2,0,5,0],\n        [0,0,2,2,2,2,0,0],\n        [0,0,2,2,2,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,0,0,0,0],\n        [0,4,4,4,0,4,4,0],\n        [0,4,4,4,0,4,0,4],\n        [0,0,4,0,4,0,4,0],\n        [0,0,4,4,4,4,0,0],\n        [0,0,4,4,4,3,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      \"solution\": \"십자(X=1)·원형(O=2)·별(S=5) → 은하(G=4)로 치환, 배경(0)·흰입자(3) 유지\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "10abee26-3b9c-4265-a314-1ffdf62de6a0.json",
    "uuid": "10abee26-3b9c-4265-a314-1ffdf62de6a0",
    "created": "2025-04-26 20:23:41",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,5,0,0,0,0,0,0,0,0,0,0,0,5,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,6,0,0,0,0,0,0,0,4,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,7,0,7,0,7,0,7,0,7,0,7,0,7,0,7],\n        [0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0],\n        [0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n        [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]\n      ],\n      \"output\": [\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0"
  },
  {
    "filename": "5d1ce3a2-9c0f-4e4c-977d-09bf7d680d32.json",
    "uuid": "5d1ce3a2-9c0f-4e4c-977d-09bf7d680d32",
    "created": "2025-04-26 19:45:10",
    "description": ""
  },
  {
    "filename": "3c65d683-b806-414b-b01a-b195f093a901.json",
    "uuid": "3c65d683-b806-414b-b01a-b195f093a901",
    "created": "2025-04-26 19:05:54",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\"^\",\".\",\".\",\".\",\"#\",\".\"],\n        [\".\",\"o\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\"*\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"output\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\"o\",\"^\",\".\",\"*\",\".\",\"#\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"solution\": \"바닥(=) 고정, 각 객체(^, o, *, #)는 자신의 열을 유지하며 중력에 의해 바닥 바로 위에 낙하\"\n    },\n    {\n      \"input\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\"^\",\"o\",\".\",\".\",\".\",\"#\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\"#\",\".\",\".\"],\n        [\".\",\"O\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"output\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\"o\",\".\",\".\",\".\",\"#\",\".\",\".\"],\n        [\".\",\"^\",\"O\",\".\",\".\",\".\",\"#\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"solution\": \"바닥(=) 고정, 같은 열에 여러 객체가 있으면 원래 아래 있던 순서대로 바닥 위에 쌓여 중력 낙하\"\n    },\n    {\n      \"input\": [\n        [\".\",\".\",\".\",\".\",\".\",\"#\",\"#\",\".\"],\n        [\".\",\".\",\".\",\"+\",\"#\",\"#\",\".\",\".\"],\n        [\".\",\".\",\"+\",\"+\",\"+,\".,\".\"],\n        [\".\",\".\",\".\",\"+\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"output\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\"+','.','.','.','.\"],\n        [\".\",\".\",\"+\",\"+\",\"+,\"#\",\"#\",\".\"],\n        [\".\",\".\",\".\",\"+,\"#\",\"#\",\".','.\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"solution\": \"바닥(=) 고정, plus 블록(십자형)과 2×2 # 블록은 형태 유지하며 자신의 열에서 바닥 바로 위까지 낙하\"\n    },\n    {\n      \"input\": [\n        [\"^\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\"^\"],\n        [\".\",\"^\",\".\",\".\",\".\",\".\",\".\",\".\",\"^\",\".\"],\n        [\".\",\".\",\"^\",\".\",\".\",\".\",\"^\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\"^\",\".\",\".\",\"^\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\"^\",\"^\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"output\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\"^\",\".\",\".\",\".\",\".\",\".\"],\n        [\"^\",\"^\",\"^\",\"^\",\"^\",\"^\",\"^\",\"^\",\"^\",\"^\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"solution\": \"바닥(=) 고정, ^ 객체는 각 열의 원래 순서대로 바닥 바로 위에 내려앉음\"\n    },\n    {\n      \"input\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\"L\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\"L\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\"L\",\"L\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"output\": [\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\"L\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\".\",\".\",\"L\",\".\",\".\",\".\",\".\",\".\"],\n        [\".\",\".\",\".\",\"L\",\"L\",\".\",\".\",\".\",\".\",\".\",\".\"],\n        [\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\",\"=\"]\n      ],\n      \"solution\": \"바닥(=) 고정, L자형 블록은 형태 유지하며 바닥 바로 위까지 중력 낙하\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "78d771b0-cce7-4dec-a698-ba09e612de8b.json",
    "uuid": "78d771b0-cce7-4dec-a698-ba09e612de8b",
    "created": "2025-04-26 20:24:47",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "72d946f2-f8f7-40c1-8e71-f790dc734050.json",
    "uuid": "72d946f2-f8f7-40c1-8e71-f790dc734050",
    "created": "2025-04-26 18:58:40",
    "description": ""
  },
  {
    "filename": "8c5097eb-2828-4fa2-8dfc-ac5c36595aee.json",
    "uuid": "8c5097eb-2828-4fa2-8dfc-ac5c36595aee",
    "created": "2025-04-26 20:14:48",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [1,1,7,1,1,1,1,1,1,1],\n        [1,1,7,7,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,8],\n        [1,1,0,0,0,1,1,1,1,8],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,0,0,7,1,1,1,1,1],\n        [1,1,0,0,7,7,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,8],\n        [1,0,1,1,1,1,1,1,8,8],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"Spiral‐indexed cells carrying 7 and 8 each advance exactly 2 steps forward (clockwise) along the 1‐path; background and 1’s remain fixed.\"\n    },\n    {\n      \"input\": [\n        [1,1,9,9,1,1,1,1,1,1],\n        [1,1,9,9,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,6],\n        [1,1,0,0,0,1,1,1,1,6],\n        [1,1,1,1,1,1,1,1,6,6],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,0,0,9,9,1,1,1,1],\n        [1,1,0,0,9,9,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,6],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,6,6],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"Both the 2×2 block of 9’s and the L‐shaped quartet of 6’s each shift 2 positions forward along the spiral of 1’s.\"\n    },\n    {\n      \"input\": [\n        [1,1,4,4,1,1,1,1,1,1],\n        [1,1,1,4,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,5],\n        [1,1,0,0,0,1,1,1,1,5],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,0,0,4,4,1,1,1,1],\n        [1,1,0,0,1,4,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,5],\n        [1,0,1,1,1,1,1,1,5,5],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"The small T‐shape of 4’s and the L‐shape of 5’s each move two spiral‐steps forward; all 0’s and 1’s are unchanged.\"\n    },\n    {\n      \"input\": [\n        [1,1,2,2,1,1,1,1,1,1],\n        [1,1,2,2,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,3],\n        [1,1,0,0,0,1,1,1,1,3],\n        [1,1,1,1,1,1,1,1,3,3],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"output\": [\n        [1,1,0,0,2,2,1,1,1,1],\n        [1,1,0,0,2,2,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,3],\n        [1,1,0,0,0,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,3,3],\n        [1,0,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1],\n        [1,1,1,1,1,1,1,1,1,1]\n      ],\n      \"solution\": \"The 2×2 red block (2’s) and the 3‑cell grey L (3’s) each advance exactly two positions along the spiral of 1’s.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "9fba0542-21cf-486c-bb10-3f1554e6fb91.json",
    "uuid": "9fba0542-21cf-486c-bb10-3f1554e6fb91",
    "created": "2025-04-26 19:14:39",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,5,0,0,1,0,1,0,5,0,3,0],\n        [1,0,1,0,0,5,0,1,0,1,0,0],\n        [0,1,0,1,0,1,0,1,0,0,0,0],\n        [1,0,1,0,1,0,1,0,0,0,0,0],\n        [0,0,0,1,0,7,0,0,1,5,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,5,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,0,7,3,0,0,5,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"solution\": \"Collect all sixteen 1’s into a 4×4 block at rows 0–3, cols 4–7; move the 3 to row 4, col 6; keep 5,7,2 unchanged; fill all other cells with 0.\"\n    },\n    {\n      \"input\": [\n        [0,0,6,0,0,0,1,0,0,8,0,3],\n        [1,0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,1,0,0,1,0,1,0,0,0,0],\n        [1,0,0,0,1,0,0,0,1,0,0,0],\n        [0,8,0,0,0,0,0,0,1,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,0,0,3,0,0,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"solution\": \"Collect all sixteen 1’s into a 4×4 block at rows 0–3, cols 4–7; move the 3 to row 4, col 6; keep 6,8,7,2 unchanged; fill all other cells with 0.\"\n    },\n    {\n      \"input\": [\n        [9,0,0,0,9,0,0,0,0,3,0,0],\n        [1,0,1,0,1,0,1,0,1,0,1,0],\n        [0,7,0,1,0,1,0,1,0,7,0,0],\n        [1,0,1,0,1,0,1,0,1,0,1,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,0,0,3,0,0,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"solution\": \"Collect all sixteen 1’s into a 4×4 block at rows 0–3, cols 4–7; move the 3 to row 4, col 6; keep 9,7,2 unchanged; fill all other cells with 0.\"\n    },\n    {\n      \"input\": [\n        [8,0,0,0,0,0,1,0,0,3,0,0],\n        [1,0,1,0,1,0,1,0,1,0,0,0],\n        [0,0,0,1,0,1,0,1,0,5,0,0],\n        [1,0,1,0,1,0,1,0,1,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,1,1,1,1,0,5,0,0],\n        [0,0,0,0,1,1,1,1,0,0,0,0],\n        [0,0,0,0,0,0,3,0,0,0,0,0],\n        [7,7,7,7,7,7,7,7,7,7,7,7],\n        [2,2,2,2,2,2,2,2,2,2,2,2],\n        [2,2,2,2,2,2,2,2,2,2,2,2]\n      ],\n      \"solution\": \"Collect all sixteen 1’s into a 4×4 block at rows 0–3, cols 4–7; move the 3 to row 4, col 6; keep 8,5,7,2 unchanged; fill all other cells with 0.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "a1f9762d-d642-45a2-a43c-80e703fc2384.json",
    "uuid": "a1f9762d-d642-45a2-a43c-80e703fc2384",
    "created": "2025-04-26 19:37:03",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "bc967a4e-d459-47d2-b8c4-9e252965db17.json",
    "uuid": "bc967a4e-d459-47d2-b8c4-9e252965db17",
    "created": "2025-04-26 19:35:56",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,3,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,3,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,3,3,3,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"output\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,3,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,3,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,3,3,3,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"solution\": \"The L-shape starts at rows [1-3], cols [5-7] and moves down-right (1,1) until the first hit on the right bar (cols 10-12), then its horizontal component flips and it moves down-left until one step before the left bar (cols 1-3), coming to rest with its top-left at (8,4).\"\n    },\n    {\n      \"input\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,4,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,4,4,4,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,4,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"output\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,4,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,4,4,4,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,4,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"solution\": \"The T-shape starts at rows [1-3], cols [5-7] and moves down-right until it hits the right bar (cols 10-12), then bounces and moves down-left, stopping just before the left bar with its top-left at (8,4).\"\n    },\n    {\n      \"input\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,5,5,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,5,5,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"output\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,5,5,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,5,5,5,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"solution\": \"The C-shape starts at the top and moves diagonally down-right, bounces off the right bar and then down-left, stopping one step before the left bar with its top-left at (8,4).\"\n    },\n    {\n      \"input\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,6,6,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,6,6,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,6,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"output\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,6,6,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,6,6,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,6,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"solution\": \"The stair shape moves diagonally, bounces off the right bar then the left, coming to rest one step before the left bar with its top-left corner at (8,4).\"\n    },\n    {\n      \"input\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,7,7,7,0,0,2,2,2,0,0],\n        [0,1,1,1,0,7,7,7,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"output\": [\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,7,7,7,0,0,2,2,2,0,0],\n        [0,1,1,1,0,7,7,7,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0],\n        [0,1,1,1,0,0,0,0,0,0,2,2,2,0,0]\n      ],\n      \"solution\": \"The 2×3 rectangle moves down-right, bounces off the right bar then off the left bar, and stops one cell before the left bar with its top-left at (8,4).\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "e5348d95-efd0-49c8-bf81-eeb4d2a29969.json",
    "uuid": "e5348d95-efd0-49c8-bf81-eeb4d2a29969",
    "created": "2025-04-26 18:12:03",
    "description": "**마지막으로 아래 형식의 JSON만 반환해:**  \n```json\n{\n    \"task\":[\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"},\n        {\"input\": [...], \"output\": [...], \"solution\": \"…\"}\n    ]\n}\n```\n"
  },
  {
    "filename": "6dedb4cf-5d3d-4dcd-ae44-76cc14f8a1e4.json",
    "uuid": "6dedb4cf-5d3d-4dcd-ae44-76cc14f8a1e4",
    "created": "2025-04-26 19:25:46",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        \"..........\",\n        \".+......+.\",\n        \"....#.#...\",\n        \"...#...#..\",\n        \"..#..*..#.\",\n        \".#...***.#\",\n        \"..#..*..#.\",\n        \"...#...#..\",\n        \".+..#.#.+.\",\n        \".....#....\"\n      ],\n      \"output\": [\n        \"..........\",\n        \".+......+.\",\n        \"....*.*...\",\n        \"...*...*..\",\n        \"..*..#..*.\",\n        \".*...###.*\",\n        \"..*..#..*.\",\n        \"...*...*..\",\n        \".+..*.*.+.\",\n        \".....*....\"\n      ],\n      \"solution\": \"Swap '#' and '*' while keeping '+' and '.' unchanged.\"\n    },\n    {\n      \"input\": [\n        \"..........\",\n        \".+..####+.\",\n        \"...#....#.\",\n        \"...#....#.\",\n        \"...#....#.\",\n        \"...#.*..#.\",\n        \"...#....#.\",\n        \"...#....#.\",\n        \".+..####+.\",\n        \"..........\"\n      ],\n      \"output\": [\n        \"..........\",\n        \".+..****+.\",\n        \"...*....*.\",\n        \"...*....*.\",\n        \"...*....*.\",\n        \"...*.#..*.\",\n        \"...*....*.\",\n        \"...*....*.\",\n        \".+..****+.\",\n        \"..........\"\n      ],\n      \"solution\": \"Swap '#' and '*' while keeping '+' and '.' unchanged.\"\n    },\n    {\n      \"input\": [\n        \"..........\",\n        \".+......+.\",\n        \"....*.....\",\n        \"....*.....\",\n        \"..######..\",\n        \"..######..\",\n        \"....*.....\",\n        \"....*.....\",\n        \".+......+.\",\n        \"..........\"\n      ],\n      \"output\": [\n        \"..........\",\n        \".+......+.\",\n        \"....#.....\",\n        \"....#.....\",\n        \"..******..\",\n        \"..******..\",\n        \"....#.....\",\n        \"....#.....\",\n        \".+......+.\",\n        \"..........\"\n      ],\n      \"solution\": \"Swap '#' and '*' while keeping '+' and '.' unchanged.\"\n    },\n    {\n      \"input\": [\n        \"..........\",\n        \".+......+.\",\n        \"..#....#..\",\n        \"...#..#...\",\n        \"....**....\",\n        \"....**....\",\n        \"...#..#...\",\n        \"..#....#..\",\n        \".+......+.\",\n        \"..........\"\n      ],\n      \"output\": [\n        \"..........\",\n        \".+......+.\",\n        \"..*....*..\",\n        \"...*..*...\",\n        \"....##....\",\n        \"....##....\",\n        \"...*..*...\",\n        \"..*....*..\",\n        \".+......+.\",\n        \"..........\"\n      ],\n      \"solution\": \"Swap '#' and '*' while keeping '+' and '.' unchanged.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "6dca98c9-c0c0-4599-bf52-55f813bce4e8.json",
    "uuid": "6dca98c9-c0c0-4599-bf52-55f813bce4e8",
    "created": "2025-04-26 18:32:44",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,2,2,0,1,0,0,0],\n        [0,0,1,2,2,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,3,3,0,1,0,0,0],\n        [0,0,1,3,3,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"solution\": \"Applying elastic reflection at the walls and elastic collisions inside causes the three clusters (2,3,4) to cyclically shift one cell clockwise: Left→Top→Right.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,2,2,0,1,0,0,0],\n        [0,0,1,2,2,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,3,3,0,1,0,0,0],\n        [0,0,1,3,3,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"solution\": \"Applying elastic reflection at the walls and elastic collisions inside causes the three clusters (2,3,4) to cyclically shift one cell clockwise: Left→Top→Right.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,2,2,0,1,0,0,0],\n        [0,0,1,2,2,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,3,3,0,1,0,0,0],\n        [0,0,1,3,3,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"solution\": \"Applying elastic reflection at the walls and elastic collisions inside causes the three clusters (2,3,4) to cyclically shift one cell clockwise: Left→Top→Right.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,2,2,0,1,0,0,0],\n        [0,0,1,2,2,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,3,3,0,0,0,0,0,4,4,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,0,1,1,1,0,0,0,0],\n        [0,0,0,1,3,3,0,1,0,0,0],\n        [0,0,1,3,3,0,0,0,1,0,0],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,4,4,0,0,0,0,0,2,2,1],\n        [1,0,0,0,0,0,0,0,0,0,1],\n        [0,1,0,0,0,0,0,0,0,1,0],\n        [0,0,1,0,0,0,0,0,1,0,0],\n        [0,0,0,1,0,0,0,1,0,0,0],\n        [0,0,0,0,1,1,1,0,0,0,0]\n      ],\n      \"solution\": \"Applying elastic reflection at the walls and elastic collisions inside causes the three clusters (2,3,4) to cycli"
  },
  {
    "filename": "ec11a3f6-00a7-48d3-94c2-92b8b4699ddc.json",
    "uuid": "ec11a3f6-00a7-48d3-94c2-92b8b4699ddc",
    "created": "2025-04-26 18:21:34",
    "description": "{\"task\":[  \n    {\"input\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,0,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,2,0,0,0,0],  \n        [0,0,2,0,2,2,2,0,0,0],  \n        [0,0,2,0,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,2,0,0,0],  \n        [0,2,2,2,0,0,2,2,2,0],  \n        [0,0,2,0,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,0,0,0,0,2,2,2,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,2,0,2,0,0,0,0,0],  \n        [0,2,0,2,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"주대각선 기준 전치(Transpose)\"  \n    },  \n    {\"input\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,0,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,2,0,0,0,0],  \n        [0,0,2,0,2,2,2,0,0,0],  \n        [0,0,2,0,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,2,0,0,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,2,2,2,0],  \n        [0,2,0,0,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,0,0],  \n        [0,2,0,0,0,0,0,0,0,0],  \n        [0,0,0,0,2,0,2,2,2,0],  \n        [0,0,0,2,2,2,0,2,0,0],  \n        [0,0,0,0,2,0,0,2,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"세로축 기준 좌우 대칭 반사(Mirror L–R)\"  \n    },  \n    {\"input\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,0,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,2,0,0,0,0],  \n        [0,0,2,0,2,2,2,0,0,0],  \n        [0,0,2,0,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,2,2,2,0,0,2,2,2,0],  \n        [0,0,0,2,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,0,0],  \n        [0,2,2,2,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,0,0,0,0],  \n        [0,0,0,0,0,2,0,2,0,0],  \n        [0,0,0,0,2,0,2,0,2,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"90° 시계 방향 회전(Rotate CW)\"  \n    },  \n    {\"input\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,0,0,2,0,0],  \n        [0,0,2,0,0,0,0,0,2,0],  \n        [0,0,0,0,0,0,0,2,0,0],  \n        [0,0,0,0,0,0,0,0,2,0],  \n        [0,2,2,2,0,2,0,0,0,0],  \n        [0,0,2,0,2,2,2,0,0,0],  \n        [0,0,2,0,0,2,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,0,0,0,0,0,0,0,0],  \n        [0,0,0,2,0,0,0,0,0,2],  \n        [0,0,2,2,2,0,0,2,0,0],  \n        [0,0,0,2,0,0,0,0,0,2],  \n        [0,0,0,0,0,0,0,0,2,0],  \n        [0,0,0,0,0,0,0,0,0,2],  \n        [0,0,2,2,2,0,2,0,0,0],  \n        [0,0,0,2,0,2,2,2,0,0],  \n        [0,0,0,2,0,0,2,0,0,0]  \n    ],  \n    \"solution\":\"오브젝트 전체를 한 칸 아래·오른쪽으로 이동(Translation +1,+1)\"  \n    }  \n]}"
  },
  {
    "filename": "ae64fdbf-adad-4425-9cd2-aebb2e230e1f.json",
    "uuid": "ae64fdbf-adad-4425-9cd2-aebb2e230e1f",
    "created": "2025-04-26 18:44:20",
    "description": ""
  },
  {
    "filename": "86efea60-e8be-4929-bfa7-ec697e613cac.json",
    "uuid": "86efea60-e8be-4929-bfa7-ec697e613cac",
    "created": "2025-04-26 20:03:35",
    "description": "{\"task\":[  \n  {  \n    \"input\":[  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,1,2,0,0,0,2,1,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"모든 윤곽선의 Manhattan 반경 r을 r+1로 확장\"  \n  },  \n  {  \n    \"input\":[  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,1,1,1,1,1,0,0],  \n      [0,0,1,2,2,2,1,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,0,1,2,2,2,1,0,0],  \n      [0,0,1,1,1,1,1,0,0],  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n      [0,1,1,1,1,1,1,1,0],  \n      [0,1,2,2,2,2,2,2,1],  \n      [1,2,2,2,2,2,2,2,1],  \n      [1,2,0,0,0,0,0,2,1],  \n      [1,2,0,0,0,0,0,2,1],  \n      [1,2,2,2,2,2,2,2,1],  \n      [0,1,2,2,2,2,2,2,1],  \n      [0,1,1,1,1,1,1,1,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"모든 윤곽선의 Chebyshev 반경 r을 r+1로 확장\"  \n  },  \n  {  \n    \"input\":[  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,0,2,0,0,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,0,0,2,0,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"output\":[  \n      [0,0,0,0,0,0,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,1,2,0,2,1,0,0,0],  \n      [0,0,1,2,0,2,1,0,0],  \n      [0,0,0,1,2,1,0,0,0],  \n      [0,0,0,0,1,0,0,0,0],  \n      [0,0,0,0,0,0,0,0,0]  \n    ],  \n    \"solution\":\"십자형 윤곽의 Manhattan 반경 r을 r+1로 확장\"  \n  },  \n  {  \n    \"input\":[  \n      [0,0,"
  },
  {
    "filename": "fb7d268d-35d8-4da7-a4aa-88015cc64384.json",
    "uuid": "fb7d268d-35d8-4da7-a4aa-88015cc64384",
    "created": "2025-04-26 18:10:57",
    "description": ""
  },
  {
    "filename": "9c5658da-b5d2-44b2-ba03-b00fb4016ab9.json",
    "uuid": "9c5658da-b5d2-44b2-ba03-b00fb4016ab9",
    "created": "2025-04-26 17:52:41",
    "description": "```json\n{\n  \"task\": [\n    {\n      \"input\": [\n        [0,0,9,9,9,0,0,0,0,3],\n        [0,9,0,0,0,9,0,0,0,3],\n        [0,0,9,9,9,9,9,3,0,0],\n        [7,7,7,0,7,7,7,7,0,0],\n        [7,0,0,7,0,0,7,0,7,0],\n        [7,7,7,0,7,7,7,7,0,0],\n        [0,0,0,5,5,5,0,0,0,0],\n        [0,0,5,0,0,0,5,0,0,0],\n        [0,0,0,5,5,5,5,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,9,9,9,0,0,0,0,3],\n        [0,9,8,8,8,9,0,0,0,3],\n        [0,8,9,9,9,9,9,3,8,0],\n        [7,7,7,8,7,7,7,7,8,0],\n        [7,8,8,7,8,8,7,8,7,0],\n        [7,7,7,8,7,7,7,7,8,0],\n        [8,8,8,5,5,5,8,8,8,0],\n        [0,0,5,8,8,8,5,0,0,0],\n        [0,0,0,8,5,5,5,5,0,0],\n        [0,0,0,0,8,8,8,8,0,0]\n      ],\n      \"solution\": \"For each object code in {9,7,5,3} at (i,j), if (i+1,j) is in range and 0, set it to 8.\"\n    },\n    {\n      \"input\": [\n        [7,7,7,7,7,7,7,7,7,7],\n        [7,9,0,0,0,0,0,0,9,7],\n        [7,0,9,9,9,9,9,9,0,7],\n        [7,0,9,5,5,5,5,9,0,7],\n        [7,0,9,9,9,9,9,9,0,7],\n        [7,9,0,0,0,0,0,0,9,7],\n        [7,7,7,7,7,7,7,7,7,7],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,3,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [7,7,7,7,7,7,7,7,7,7],\n        [7,9,8,8,8,8,8,8,9,7],\n        [7,8,9,9,9,9,9,9,8,7],\n        [7,0,9,5,5,5,5,9,0,7],\n        [7,0,9,9,9,9,9,9,0,7],\n        [7,9,8,8,8,8,8,8,9,7],\n        [7,7,7,7,7,7,7,7,7,7],\n        [8,8,8,8,8,8,8,8,8,8],\n        [0,0,0,0,0,3,0,0,0,0],\n        [0,0,0,0,0,8,0,0,0,0]\n      ],\n      \"solution\": \"For each object code in {9,7,5,3} at (i,j), if (i+1,j) is in range and 0, set it to 8.\"\n    },\n    {\n      \"input\": [\n        [0,0,0,5,5,5,0,0,0,0],\n        [0,0,5,5,5,5,5,0,0,0],\n        [0,5,5,5,5,5,5,5,0,0],\n        [5,5,5,5,5,5,5,5,5,5],\n        [0,5,5,5,5,5,5,5,0,0],\n        [0,0,5,5,5,5,0,0,0,0],\n        [0,0,0,5,5,5,0,0,0,0],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,9,0,0,7,0,0,3,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [0,0,0,5,5,5,0,0,0,0],\n        [0,0,5,5,5,5,5,0,0,0],\n        [0,5,5,5,5,5,5,5,0,0],\n        [5,5,5,5,5,5,5,5,5,5],\n        [8,5,5,5,5,5,5,5,8,8],\n        [0,8,5,5,5,5,8,0,0,0],\n        [0,0,8,5,5,5,8,0,0,0],\n        [0,0,0,8,8,8,0,0,0,0],\n        [0,0,9,0,0,7,0,0,3,0],\n        [0,0,8,0,0,8,0,0,8,0]\n      ],\n      \"solution\": \"For each object code in {9,7,5,3} at (i,j), if (i+1,j) is in range and 0, set it to 8.\"\n    },\n    {\n      \"input\": [\n        [9,7,5,7,9,7,5,7,9,7],\n        [0,7,0,7,0,3,0,7,0,7],\n        [5,0,9,7,9,7,9,7,0,5],\n        [7,0,0,0,7,0,0,0,7,0],\n        [0,5,5,5,0,7,0,5,5,5],\n        [0,0,3,0,0,0,3,0,0,0],\n        [9,7,9,7,9,7,9,7,9,7],\n        [0,0,0,0,0,0,0,0,0,0],\n        [0,0,0,1,0,0,0,1,0,0],\n        [0,0,0,0,0,0,0,0,0,0]\n      ],\n      \"output\": [\n        [9,7,5,7,9,7,5,7,9,7],\n        [8,7,8,7,8,3,8,7,8,7],\n        [5,8,9,7,9,7,9,7,8,5],\n        [7,0,8,0,7,0,0,0,7,0],\n        [8,5,5,5,8,7,8,5,5,5],\n        [0,8,3,8,0,0,3,8,0,0],\n        [9,7,9,7,9,7,9,7,9,7],\n        [8,8,8,8,8,8,8,8,8,8],\n        [0,0,0,1,0,0,0,1,0,0],\n        [0,0,0,8,0,0,0,8,0,0]\n      ],\n      \"solution\": \"For each object code in {9,7,5,3} at (i,j), if (i+1,j) is in range and 0, set it to 8.\"\n    }\n  ]\n}\n```"
  },
  {
    "filename": "cb0d1e3d-9856-447d-ae91-8999df481083.json",
    "uuid": "cb0d1e3d-9856-447d-ae91-8999df481083",
    "created": "2025-04-26 18:00:09",
    "description": ""
  }
]